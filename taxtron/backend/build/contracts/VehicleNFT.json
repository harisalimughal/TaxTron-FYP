{
  "contractName": "VehicleNFT",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ERC721IncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ERC721InsufficientApproval",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ERC721NonexistentToken",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_toTokenId",
          "type": "uint256"
        }
      ],
      "name": "BatchMetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "MetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "inspectionId",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "make",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "model",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "registrationNumber",
          "type": "string"
        }
      ],
      "name": "VehicleNFTMinted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "inspectionToTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "nftMinted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToInspection",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "vehicleInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "make",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "model",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "year",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "vehicleType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "registrationNumber",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "mintTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "inspectionId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "name": "mintVehicleNFT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "inspectionId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "make",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "model",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "year",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "vehicleType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "registrationNumber",
          "type": "string"
        }
      ],
      "name": "mintVehicleNFT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "inspectionId",
          "type": "string"
        }
      ],
      "name": "getTokenIdByInspection",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getInspectionByTokenId",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "inspectionId",
          "type": "string"
        }
      ],
      "name": "nftExistsForInspection",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "inspectionId",
          "type": "string"
        }
      ],
      "name": "getVehicleInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "make",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "model",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "year",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "vehicleType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "registrationNumber",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "mintTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getVehicleDetailsByTokenId",
      "outputs": [
        {
          "internalType": "string",
          "name": "make",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "model",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "year",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "vehicleType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "registrationNumber",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "inspectionId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "mintTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "inspectionId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "make",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "model",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "year",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "vehicleType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "registrationNumber",
          "type": "string"
        }
      ],
      "name": "adminMintNFT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burnNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"inspectionId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"make\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"model\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"registrationNumber\",\"type\":\"string\"}],\"name\":\"VehicleNFTMinted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"inspectionId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"make\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"model\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"year\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"vehicleType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"registrationNumber\",\"type\":\"string\"}],\"name\":\"adminMintNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burnNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getInspectionByTokenId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"inspectionId\",\"type\":\"string\"}],\"name\":\"getTokenIdByInspection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getVehicleDetailsByTokenId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"make\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"model\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"year\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"vehicleType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"registrationNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"inspectionId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mintTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"inspectionId\",\"type\":\"string\"}],\"name\":\"getVehicleInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"make\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"model\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"year\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"vehicleType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"registrationNumber\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mintTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"inspectionToTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"inspectionId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"mintVehicleNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"inspectionId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"make\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"model\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"year\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"vehicleType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"registrationNumber\",\"type\":\"string\"}],\"name\":\"mintVehicleNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"inspectionId\",\"type\":\"string\"}],\"name\":\"nftExistsForInspection\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"nftMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenIdToInspection\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"vehicleInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"make\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"model\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"year\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"vehicleType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"registrationNumber\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mintTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"adminMintNFT(string,address,string,string,string,string,string,string)\":{\"details\":\"Owner can mint NFT for any vehicle (admin function)\"},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burnNFT(uint256)\":{\"details\":\"Burn NFT and clean up mappings\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getInspectionByTokenId(uint256)\":{\"details\":\"Get inspection ID for a given token ID\"},\"getTokenIdByInspection(string)\":{\"details\":\"Get token ID for a given inspection ID\"},\"getVehicleDetailsByTokenId(uint256)\":{\"details\":\"Get vehicle details by token ID\"},\"getVehicleInfo(string)\":{\"details\":\"Get vehicle info stored on-chain\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"mintVehicleNFT(string,address,string)\":{\"details\":\"Simplified mint function (backward compatibility)\"},\"mintVehicleNFT(string,address,string,string,string,string,string,string)\":{\"details\":\"Mint NFT for a vehicle (independent version)\",\"params\":{\"_tokenURI\":\"Metadata URI for the NFT\",\"inspectionId\":\"The vehicle inspection ID\",\"make\":\"Vehicle make (optional, for on-chain storage)\",\"model\":\"Vehicle model (optional, for on-chain storage)\",\"registrationNumber\":\"Registration number (optional, for on-chain storage)\",\"to\":\"Address to mint NFT to\",\"vehicleType\":\"Vehicle type (optional, for on-chain storage)\",\"year\":\"Vehicle year (optional, for on-chain storage)\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"nftExistsForInspection(string)\":{\"details\":\"Check if NFT exists for inspection ID\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Override required by Solidity for multiple inheritance\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Override required by Solidity for multiple inheritance\"},\"totalSupply()\":{\"details\":\"Get total number of minted NFTs\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NftMiniting.sol\":\"VehicleNFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xb9dc602a845c73d11f1fe38039c0c2cf70fedd2d4afd877c0ed2d0383ffaa232\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eb46224e996c2f9ecb9a821e65b920c2ecfe9df734613c3df9831de373491c\",\"dweb:/ipfs/QmTsZzJTqRavv64zyaWovcWkUNwfU3uo8uiUjrMFEm8MMj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"project:/contracts/NftMiniting.sol\":{\"keccak256\":\"0xd5f2029f3ed20fc0c96ab97c6ddf075040b859584a842d140df0412a0fbe3180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14a1c5ebb6344d8cc3cf29a1c3065f1d3a6cc359fedfe5425ae414f3cce62d31\",\"dweb:/ipfs/QmPs3vbBAsxeERDJC7kiLwHtNSYhEzonNXaGTgMYQK2TRm\"]}},\"version\":1}",
  "bytecode": "0x608034620003c457601f906001600160401b03601f1962002892388190038581018316850184811186821017620003b057859282916040528339602094859181010312620003c457516001600160a01b03948582169391849003620003c45762000068620003c8565b94601786527f56656869636c65204365727469666963617465204e4654000000000000000000818701526200009c620003c8565b9060058252641590d3919560da1b81830152865194848611620003b0575f958654986001998a81811c91168015620003a5575b8582101462000391579081878493116200033e575b508490878311600114620002de578992620002d2575b50505f19600383901b1c191690891b1786555b8251948511620002be5787548881811c91168015620002b3575b838210146200029f5790818587969594931162000246575b5081938511600114620001e25750508492620001d6575b50505f19600383901b1c191690841b1783555b8115620001be57600780546001600160a01b0319811684179091556040519416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36008556124a99081620003e98239f35b60249060405190631e4fbdf760e01b82526004820152fd5b015190505f8062000156565b889593929193168587528387209387905b8282106200022c575050841162000213575b505050811b01835562000169565b01515f1960f88460031b161c191690555f808062000205565b8484015186558a97909501949384019390810190620001f3565b9091929394508887528287208580880160051c82019285891062000295575b9188978c9297969594930160051c01915b828110620002865750506200013f565b8981558897508b910162000276565b9250819262000265565b634e487b7160e01b87526022600452602487fd5b90607f169062000127565b634e487b7160e01b86526041600452602486fd5b015190505f80620000fa565b90848c9416918a8052868b20928b5b888282106200032757505084116200030e575b505050811b0186556200010d565b01515f1960f88460031b161c191690555f808062000300565b8385015186558f97909501949384019301620002ed565b9091508880528489208780850160051c82019287861062000387575b918d91869594930160051c01915b82811062000378575050620000e4565b8b81558594508d910162000368565b925081926200035a565b634e487b7160e01b89526022600452602489fd5b90607f1690620000cf565b634e487b7160e01b5f52604160045260245ffd5b5f80fd5b60408051919082016001600160401b03811183821017620003b05760405256fe608060409080825260049081361015610016575f80fd5b5f90813560e01c90816301ffc9a714610fb55750806306fdde0314610f0d578063081812fc14610ed0578063089fb0ac14610e31578063095ea7b314610d5557806318160ddd14610d1757806323b872dd14610cff5780632890e0d714610b0b578063317d70f114610abf57806342842e0e14610a905780636352211e14610a5e57806370a0823114610a08578063715018a6146109ab5780637c249495146105e75780638da5cb5b1461098257806395d89b411461089f578063a22cb46514610802578063a3f2a14d146107b7578063a5ec48021461078a578063ab32c50814610687578063b37a6d1e14610649578063b8859a44146105e7578063b88d4fde14610579578063c02d2be4146104c8578063c87b56dd14610471578063d01f3bdf14610445578063d99f47f2146103bd578063e985e9c51461036f578063f2fde38b146102da5763f5348e711461016c575f80fd5b346102d757602092836003193601126102d357823580835260028552818320546001600160a01b0393839290916101a690861615156123e8565b8152600a8652206101b690611197565b8151858183518181848701916101cb9261103b565b8101600c815203019020928251926101e284611081565b6101eb85611197565b84526101f960018601611197565b8488019081529561020c60028701611197565b8583019081529161021f60038801611197565b9160608701928352870161023290611197565b93846080880152600588015416968760a088015260060154958660c082015251975192519151928151998a99610100808c528b0161026f9161105c565b908a8203908b01526102809161105c565b90888203908901526102919161105c565b86810360608801526102a29161105c565b85810360808701526102b39161105c565b84810360a08601526102c49161105c565b9160c084015260e08301520390f35b5080fd5b80fd5b5091903461036b57602036600319011261036b576102f66112ac565b906102ff6113d7565b6001600160a01b03918216928315610355575050600754826bffffffffffffffffffffffff60a01b821617600755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5082346102d357806003193601126102d35760ff8160209361038f6112ac565b6103976112c2565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b508290346102d75760203660031901126102d7578235906001600160401b0382116102d7575060206103f6819461043393369101611141565b83519061042360ff82519385818186019661041281838a61103b565b8101600b8152030190205416612391565b845193849283925192839161103b565b81016009815203019020549051908152f35b5082346102d35760209061046a61045b3661130d565b9695909594919493929361173a565b9051908152f35b5082346102d35760203660031901126102d3576104c492356104928161159e565b50825260066020526104a5818320611197565b9181516104b1816110b0565b525191829160208352602083019061105c565b0390f35b5091903461036b57606036600319011261036b576001600160401b038135818111610575576104fa9036908401611141565b916105036112c2565b91604435908111610571579161052361046a949260209794369101611141565b855161052e816110b0565b84815286519161053d836110b0565b85835287519361054c856110b0565b86855288519561055b876110b0565b87875289519761056a896110b0565b885261173a565b8580fd5b8480fd5b5090346102d35760803660031901126102d3576105946112ac565b61059c6112c2565b604435906064356001600160401b0381116105715736602382011215610571576105e4948160246105d293369301359101611107565b926105de838383611403565b336115d8565b80f35b508290346102d75760203660031901126102d7578235906001600160401b0382116102d757506106346020610622819560ff94369101611141565b8185519382858094519384920161103b565b8101600b815203019020541690519015158152f35b5091903461036b57602036600319011261036b57816104c49361067492358152600a60205220611197565b905191829160208352602083019061105c565b50346102d75760203660031901126102d7578135906001600160401b0382116102d757506106ec60206106c06104c49336908601611141565b8551906106dc60ff82519385818186019661041281838a61103b565b865193849283925192839161103b565b8101600c81520301902083519061070282611081565b61070b81611197565b825261071960018201611197565b936020830194855261072d60028301611197565b9580840196875261075261074360038501611197565b92606086019384528401611197565b91826080860152600660018060a01b03600586015416948560a08801520154948560c082015251965197519051915197889788611238565b5082346102d35760209061046a6107a03661130d565b966107b29691969592959493946113d7565b61173a565b508290346102d75760203660031901126102d7578235906001600160401b0382116102d7575060206107f0819461043393369101611141565b8184519382858094519384920161103b565b50913461036b578060031936011261036b5761081c6112ac565b9060243591821515809303610575576001600160a01b031692831561088a5750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b836024925191630b61174360e31b8352820152fd5b5082346102d357816003193601126102d3578051908260018054916108c38361115f565b8086529282811690811561095a57506001146108fe575b5050506108ec826104c49403836110cb565b5191829160208352602083019061105c565b94508085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828610610942575050506108ec8260206104c495820101946108da565b80546020878701810191909152909501948101610925565b6104c49750869350602092506108ec94915060ff191682840152151560051b820101946108da565b5082346102d357816003193601126102d35760075490516001600160a01b039091168152602090f35b50346102d757806003193601126102d7576109c46113d7565b600780546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b508290346102d75760203660031901126102d7576001600160a01b03610a2c6112ac565b16928315610a495750806020938392526003845220549051908152f35b91516322718ad960e21b815291820152602490fd5b508290346102d75760203660031901126102d75750610a7f6020923561159e565b90516001600160a01b039091168152f35b5082346102d3576105e490610aa4366112d8565b91925192610ab1846110b0565b8584526105de838383611403565b5091903461036b57602036600319011261036b57358083526002602052818320546104c493610674928492610afe906001600160a01b031615156123e8565b8152600a60205220611197565b50913461036b5760209081600319360112610cfb578235918285526002815260018060a01b0380838720541633148015610cee575b15610cb257858491828252600a8452816006610bc986610b61898520611197565b89519085815192848181850195610b7981838961103b565b8101600981520301902055888652600a8352610b968b872061242b565b8a5183818351610ba781838861103b565b8101600b81520301902060ff1981541690558a5193849283925192839161103b565b8101600c815203019020610bdc8161242b565b610be86001820161242b565b610bf46002820161242b565b610c006003820161242b565b610c0b8a820161242b565b826005820155015582825260028452848220541660028115948515610c81575b8484525284822080546001600160a01b03191690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4610c6c578380f35b51637e27328960e01b81529182015260249150fd5b5f85815260046020526040902080546001600160a01b03191690558284526003815286842080545f19019055610c2b565b825162461bcd60e51b815280860183905260166024820152752737ba1030baba3437b934bd32b2103a3790313ab93760511b6044820152606490fd5b5033816007541614610b40565b8380fd5b50346102d7576105e4610d11366112d8565b91611403565b5082346102d357816003193601126102d3576008545f19810192908311610d42576020838351908152f35b634e487b7160e01b815260118452602490fd5b50913461036b578060031936011261036b57610d6f6112ac565b91602435610d7c8161159e565b33151580610e1e575b80610df5575b610ddf576001600160a01b039485169482918691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258880a48452602052822080546001600160a01b031916909117905580f35b835163a9fbf51f60e01b81523381850152602490fd5b506001600160a01b03811686526005602090815284872033885290528386205460ff1615610d8b565b506001600160a01b038116331415610d85565b508290346102d75760203660031901126102d7578235906001600160401b0382116102d75750610e6c60206106226104c49336908701611141565b8101600c81520301902091610e8083611197565b92610e8d60018201611197565b94610e9a60028301611197565b90610eb2610eaa60038501611197565b918401611197565b91600660018060a01b03600586015416940154945197889788611238565b5091903461036b57602036600319011261036b57918260209335610ef38161159e565b50825283528190205490516001600160a01b039091168152f35b5082346102d357816003193601126102d357805190828054610f2e8161115f565b8085529160019180831690811561095a5750600114610f59575050506108ec826104c49403836110cb565b80809650527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828610610f9d575050506108ec8260206104c495820101946108da565b80546020878701810191909152909501948101610f80565b9050823461036b57602036600319011261036b573563ffffffff60e01b811680910361036b5760209250632483248360e11b8114908115610ff8575b5015158152f35b6380ac58cd60e01b81149150811561102a575b8115611019575b5083610ff1565b6301ffc9a760e01b14905083611012565b635b5e139f60e01b8114915061100b565b5f5b83811061104c5750505f910152565b818101518382015260200161103d565b906020916110758151809281855285808601910161103b565b601f01601f1916010190565b60e081019081106001600160401b0382111761109c57604052565b634e487b7160e01b5f52604160045260245ffd5b602081019081106001600160401b0382111761109c57604052565b90601f801991011681019081106001600160401b0382111761109c57604052565b6001600160401b03811161109c57601f01601f191660200190565b929192611113826110ec565b9161112160405193846110cb565b82948184528183011161113d578281602093845f960137010152565b5f80fd5b9080601f8301121561113d5781602061115c93359101611107565b90565b90600182811c9216801561118d575b602083101461117957565b634e487b7160e01b5f52602260045260245ffd5b91607f169161116e565b9060405191825f8254926111aa8461115f565b9081845260019485811690815f1461121557506001146111d5575b50506111d3925003836110cb565b565b909391505f52602090815f20935f915b8183106111fd5750506111d393508201015f806111c5565b855488840185015294850194879450918301916111e5565b9150506111d394506020925060ff191682840152151560051b8201015f806111c5565b9361127c6112989461126e60c0989561126061128a969d9c9b9d60e08b5260e08b019061105c565b9089820360208b015261105c565b90878203604089015261105c565b90858203606087015261105c565b90838203608085015261105c565b6001600160a01b0390951660a08201520152565b600435906001600160a01b038216820361113d57565b602435906001600160a01b038216820361113d57565b606090600319011261113d576001600160a01b0390600435828116810361113d5791602435908116810361113d579060443590565b61010060031982011261113d576004916001600160401b0390833582811161113d578361133b918601611141565b936024356001600160a01b038116810361113d579360443584811161113d5781611366918401611141565b9360643581811161113d578261137d918501611141565b9360843582811161113d5783611394918601611141565b9360a43583811161113d57846113ab918301611141565b9360c43584811161113d57816113c2918401611141565b9360e43590811161113d5761115c9201611141565b6007546001600160a01b031633036113eb57565b60405163118cdaa760e01b8152336004820152602490fd5b6001600160a01b039182169290918315611586575f928284528260209560028752604096848888205416968791331515806114f0575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92846114bf575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a4169283830361149e5750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b5f87815260046020526040902080546001600160a01b0319169055848352600381528b832080545f19019055611465565b91939450915080611545575b1561150c5785929187915f611439565b878688611529576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b50338714801561156a575b806114fc57508582526004815233858984205416146114fc565b5086825260058152878220338352815260ff8883205416611550565b604051633250574960e11b81525f6004820152602490fd5b5f818152600260205260409020546001600160a01b03169081156115c0575090565b60249060405190637e27328960e01b82526004820152fd5b90939192833b6115ea575b5050505050565b604051630a85bd0160e11b8082526001600160a01b03938416600483015295831660248201526044810191909152608060648201529492169260209291859061163790608483019061105c565b039483815f978189895af18691816116e0575b506116aa575050503d5f146116a1573d611663816110ec565b9061167160405192836110cb565b81528093823d92013e5b8251928361169c57604051633250574960e11b815260048101849052602490fd5b019050fd5b6060925061167b565b919450915063ffffffff60e01b16036116c857505f808080806115e3565b60249060405190633250574960e11b82526004820152fd5b9091508481813d831161171d575b6116f881836110cb565b8101031261171957516001600160e01b03198116810361171957905f61164a565b8680fd5b503d6116ee565b81811061172f575050565b5f8155600101611724565b96959694939091929480511561234c576001600160a01b038316156123155760ff6040516020818451611770818385890161103b565b8101600b81520301902054166122c457600854975f1989146122b0576001890160085560405161179f816110b0565b5f8082528a8152600260205260409020546001600160a01b0316801515908b908261227d575b6001600160a01b0388165f818152600360209081526040808320805460010190558583526002909152812080546001600160a01b031916831790559091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080a461226557843b612118575b50885f52600660205260405f2085516001600160401b03811161109c57611859825461115f565b601f81116120e8575b50806020601f8211600114612085575f9161207a575b508160011b915f199060031b1c19161790555b7ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce760206040518b8152a18860405160208185516118cb8183858a0161103b565b8101600981520301902055885f52600a60205260405f2082516001600160401b03811161109c576118fc825461115f565b601f811161204a575b50806020601f8211600114611fe7575f91611fdc575b508160011b915f199060031b1c19161790555b6040516020818451611943818385890161103b565b8101600b815203019020600160ff198254161790556040519561196587611081565b8787528360208801526040870152606086015286608086015260018060a01b03831660a08601524260c086015260405160208183516119a7818385880161103b565b8101600c81520301902085518051906001600160401b03821161109c5781906119d0845461115f565b601f8111611fac575b50602090601f8311600114611f44575f92611f39575b50508160011b915f199060031b1c19161781555b60208601518051906001600160401b03821161109c578190611a28600185015461115f565b601f8111611f06575b50602090601f8311600114611e98575f92611e8d575b50508160011b915f199060031b1c19161760018201555b60408601518051906001600160401b03821161109c578190611a83600285015461115f565b601f8111611e5a575b50602090601f8311600114611dec575f92611de1575b50508160011b915f199060031b1c19161760028201555b60608601518051906001600160401b03821161109c578190611ade600385015461115f565b601f8111611dae575b50602090601f8311600114611d40575f92611d35575b50508160011b915f199060031b1c19161760038201555b60808601519586516001600160401b03811161109c578a97611b39600485015461115f565b601f8111611cf7575b50602090601f8311600114611c4d57611c3c95611c079895600660c0611c2397877f900e2494d9e8ea8c594277b19fd4e792c0b2f20704db2852aa7911515a9438879e9c98611c1598611bed985f92611c42575b50508160011b915f199060031b1c19161760048501555b6005840160018060a01b0360a0830151166bffffffffffffffffffffffff60a01b825416179055015191015560206040519282848094519384920161103b565b81010390209960405197889760808952608089019061105c565b90878203602089015261105c565b90858203604087015261105c565b83810360608501526001600160a01b039091169761105c565b0390a490565b015190505f80611b96565b90600485015f5260205f20915f5b601f1985168110611cdc575095611c079895600660c0611c23976001887f900e2494d9e8ea8c594277b19fd4e792c0b2f20704db2852aa7911515a9438879f9d9998611bed98611c3c9e611c159b601f19811610611cc4575b505050811b016004850155611bad565b01515f1960f88460031b161c191690555f8080611cb4565b8183015184558e9b5060019093019260209283019201611c5b565b611d2590600486015f5260205f20601f850160051c81019160208610611d2b575b601f0160051c0190611724565b5f611b42565b9091508190611d18565b015190505f80611afd565b9250600384015f5260205f20905f935b601f1984168510611d93576001945083601f19811610611d7b575b505050811b016003820155611b14565b01515f1960f88460031b161c191690555f8080611d6b565b81810151835560209485019460019093019290910190611d50565b611ddb90600386015f5260205f20601f850160051c81019160208610611d2b57601f0160051c0190611724565b5f611ae7565b015190505f80611aa2565b9250600284015f5260205f20905f935b601f1984168510611e3f576001945083601f19811610611e27575b505050811b016002820155611ab9565b01515f1960f88460031b161c191690555f8080611e17565b81810151835560209485019460019093019290910190611dfc565b611e8790600286015f5260205f20601f850160051c81019160208610611d2b57601f0160051c0190611724565b5f611a8c565b015190505f80611a47565b9250600184015f5260205f20905f935b601f1984168510611eeb576001945083601f19811610611ed3575b505050811b016001820155611a5e565b01515f1960f88460031b161c191690555f8080611ec3565b81810151835560209485019460019093019290910190611ea8565b611f3390600186015f5260205f20601f850160051c81019160208610611d2b57601f0160051c0190611724565b5f611a31565b015190505f806119ef565b9250835f5260205f20905f935b601f1984168510611f91576001945083601f19811610611f79575b505050811b018155611a03565b01515f1960f88460031b161c191690555f8080611f6c565b81810151835560209485019460019093019290910190611f51565b611fd690855f5260205f20601f850160051c81019160208610611d2b57601f0160051c0190611724565b5f6119d9565b90508401515f61191b565b9150825f5260205f205f925b601f1983168410612032576001935082601f1981161061201a575b5050811b01905561192e565b8601515f1960f88460031b161c191690555f8061200e565b86810151825560209384019360019092019101611ff3565b61207490835f5260205f20601f840160051c81019160208510611d2b57601f0160051c0190611724565b5f611905565b90508701515f611878565b9150825f5260205f205f925b601f19831684106120d0576001935082601f198116106120b8575b5050811b01905561188b565b8901515f1960f88460031b161c191690555f806120ac565b89810151825560209384019360019092019101612091565b61211290835f5260205f20601f840160051c81019160208510611d2b57601f0160051c0190611724565b5f611862565b602061215e91868c5f989e9d9c9b9a9998604051809681958294630a85bd0160e11b8452336004850152846024850152604484015260806064840152608483019061105c565b03926001600160a01b03165af15f9181612220575b506121da578a3d156121d2573d9061218a826110ec565b9161219860405193846110cb565b82523d5f602084013e5b815191826121cb57604051633250574960e11b81526001600160a01b0383166004820152602490fd5b6020915001fd5b6060906121a2565b630a85bd0160e19b95969798999a9b1b9063ffffffff60e01b16036121ff575f611832565b604051633250574960e11b81526001600160a01b0385166004820152602490fd5b9091506020813d60201161225d575b8161223c602093836110cb565b8101031261113d57516001600160e01b03198116810361113d57905f612173565b3d915061222f565b6040516339e3563760e11b81525f6004820152602490fd5b5f82815260046020526040902080546001600160a01b0319169055805f52600360205260405f205f1981540190556117c5565b634e487b7160e01b5f52601160045260245ffd5b60405162461bcd60e51b815260206004820152602360248201527f4e465420616c7265616479206d696e74656420666f7220746869732076656869604482015262636c6560e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f496e7370656374696f6e2049442063616e6e6f7420626520656d7074790000006044820152606490fd5b1561239857565b60405162461bcd60e51b815260206004820152602260248201527f4e4654206e6f74206d696e74656420666f72207468697320696e73706563746960448201526137b760f11b6064820152608490fd5b156123ef57565b60405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b612435815461115f565b908161243f575050565b81601f5f9311600114612450575055565b90808391825261246f601f60208420940160051c840160018501611724565b555556fea2646970667358221220b345686a286d1c9f6ec0b83b0e6e136348fcb69ae1de5ef07f5a3b5204811a9364736f6c63430008140033",
  "deployedBytecode": "0x608060409080825260049081361015610016575f80fd5b5f90813560e01c90816301ffc9a714610fb55750806306fdde0314610f0d578063081812fc14610ed0578063089fb0ac14610e31578063095ea7b314610d5557806318160ddd14610d1757806323b872dd14610cff5780632890e0d714610b0b578063317d70f114610abf57806342842e0e14610a905780636352211e14610a5e57806370a0823114610a08578063715018a6146109ab5780637c249495146105e75780638da5cb5b1461098257806395d89b411461089f578063a22cb46514610802578063a3f2a14d146107b7578063a5ec48021461078a578063ab32c50814610687578063b37a6d1e14610649578063b8859a44146105e7578063b88d4fde14610579578063c02d2be4146104c8578063c87b56dd14610471578063d01f3bdf14610445578063d99f47f2146103bd578063e985e9c51461036f578063f2fde38b146102da5763f5348e711461016c575f80fd5b346102d757602092836003193601126102d357823580835260028552818320546001600160a01b0393839290916101a690861615156123e8565b8152600a8652206101b690611197565b8151858183518181848701916101cb9261103b565b8101600c815203019020928251926101e284611081565b6101eb85611197565b84526101f960018601611197565b8488019081529561020c60028701611197565b8583019081529161021f60038801611197565b9160608701928352870161023290611197565b93846080880152600588015416968760a088015260060154958660c082015251975192519151928151998a99610100808c528b0161026f9161105c565b908a8203908b01526102809161105c565b90888203908901526102919161105c565b86810360608801526102a29161105c565b85810360808701526102b39161105c565b84810360a08601526102c49161105c565b9160c084015260e08301520390f35b5080fd5b80fd5b5091903461036b57602036600319011261036b576102f66112ac565b906102ff6113d7565b6001600160a01b03918216928315610355575050600754826bffffffffffffffffffffffff60a01b821617600755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5082346102d357806003193601126102d35760ff8160209361038f6112ac565b6103976112c2565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b508290346102d75760203660031901126102d7578235906001600160401b0382116102d7575060206103f6819461043393369101611141565b83519061042360ff82519385818186019661041281838a61103b565b8101600b8152030190205416612391565b845193849283925192839161103b565b81016009815203019020549051908152f35b5082346102d35760209061046a61045b3661130d565b9695909594919493929361173a565b9051908152f35b5082346102d35760203660031901126102d3576104c492356104928161159e565b50825260066020526104a5818320611197565b9181516104b1816110b0565b525191829160208352602083019061105c565b0390f35b5091903461036b57606036600319011261036b576001600160401b038135818111610575576104fa9036908401611141565b916105036112c2565b91604435908111610571579161052361046a949260209794369101611141565b855161052e816110b0565b84815286519161053d836110b0565b85835287519361054c856110b0565b86855288519561055b876110b0565b87875289519761056a896110b0565b885261173a565b8580fd5b8480fd5b5090346102d35760803660031901126102d3576105946112ac565b61059c6112c2565b604435906064356001600160401b0381116105715736602382011215610571576105e4948160246105d293369301359101611107565b926105de838383611403565b336115d8565b80f35b508290346102d75760203660031901126102d7578235906001600160401b0382116102d757506106346020610622819560ff94369101611141565b8185519382858094519384920161103b565b8101600b815203019020541690519015158152f35b5091903461036b57602036600319011261036b57816104c49361067492358152600a60205220611197565b905191829160208352602083019061105c565b50346102d75760203660031901126102d7578135906001600160401b0382116102d757506106ec60206106c06104c49336908601611141565b8551906106dc60ff82519385818186019661041281838a61103b565b865193849283925192839161103b565b8101600c81520301902083519061070282611081565b61070b81611197565b825261071960018201611197565b936020830194855261072d60028301611197565b9580840196875261075261074360038501611197565b92606086019384528401611197565b91826080860152600660018060a01b03600586015416948560a08801520154948560c082015251965197519051915197889788611238565b5082346102d35760209061046a6107a03661130d565b966107b29691969592959493946113d7565b61173a565b508290346102d75760203660031901126102d7578235906001600160401b0382116102d7575060206107f0819461043393369101611141565b8184519382858094519384920161103b565b50913461036b578060031936011261036b5761081c6112ac565b9060243591821515809303610575576001600160a01b031692831561088a5750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b836024925191630b61174360e31b8352820152fd5b5082346102d357816003193601126102d3578051908260018054916108c38361115f565b8086529282811690811561095a57506001146108fe575b5050506108ec826104c49403836110cb565b5191829160208352602083019061105c565b94508085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828610610942575050506108ec8260206104c495820101946108da565b80546020878701810191909152909501948101610925565b6104c49750869350602092506108ec94915060ff191682840152151560051b820101946108da565b5082346102d357816003193601126102d35760075490516001600160a01b039091168152602090f35b50346102d757806003193601126102d7576109c46113d7565b600780546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b508290346102d75760203660031901126102d7576001600160a01b03610a2c6112ac565b16928315610a495750806020938392526003845220549051908152f35b91516322718ad960e21b815291820152602490fd5b508290346102d75760203660031901126102d75750610a7f6020923561159e565b90516001600160a01b039091168152f35b5082346102d3576105e490610aa4366112d8565b91925192610ab1846110b0565b8584526105de838383611403565b5091903461036b57602036600319011261036b57358083526002602052818320546104c493610674928492610afe906001600160a01b031615156123e8565b8152600a60205220611197565b50913461036b5760209081600319360112610cfb578235918285526002815260018060a01b0380838720541633148015610cee575b15610cb257858491828252600a8452816006610bc986610b61898520611197565b89519085815192848181850195610b7981838961103b565b8101600981520301902055888652600a8352610b968b872061242b565b8a5183818351610ba781838861103b565b8101600b81520301902060ff1981541690558a5193849283925192839161103b565b8101600c815203019020610bdc8161242b565b610be86001820161242b565b610bf46002820161242b565b610c006003820161242b565b610c0b8a820161242b565b826005820155015582825260028452848220541660028115948515610c81575b8484525284822080546001600160a01b03191690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4610c6c578380f35b51637e27328960e01b81529182015260249150fd5b5f85815260046020526040902080546001600160a01b03191690558284526003815286842080545f19019055610c2b565b825162461bcd60e51b815280860183905260166024820152752737ba1030baba3437b934bd32b2103a3790313ab93760511b6044820152606490fd5b5033816007541614610b40565b8380fd5b50346102d7576105e4610d11366112d8565b91611403565b5082346102d357816003193601126102d3576008545f19810192908311610d42576020838351908152f35b634e487b7160e01b815260118452602490fd5b50913461036b578060031936011261036b57610d6f6112ac565b91602435610d7c8161159e565b33151580610e1e575b80610df5575b610ddf576001600160a01b039485169482918691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258880a48452602052822080546001600160a01b031916909117905580f35b835163a9fbf51f60e01b81523381850152602490fd5b506001600160a01b03811686526005602090815284872033885290528386205460ff1615610d8b565b506001600160a01b038116331415610d85565b508290346102d75760203660031901126102d7578235906001600160401b0382116102d75750610e6c60206106226104c49336908701611141565b8101600c81520301902091610e8083611197565b92610e8d60018201611197565b94610e9a60028301611197565b90610eb2610eaa60038501611197565b918401611197565b91600660018060a01b03600586015416940154945197889788611238565b5091903461036b57602036600319011261036b57918260209335610ef38161159e565b50825283528190205490516001600160a01b039091168152f35b5082346102d357816003193601126102d357805190828054610f2e8161115f565b8085529160019180831690811561095a5750600114610f59575050506108ec826104c49403836110cb565b80809650527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828610610f9d575050506108ec8260206104c495820101946108da565b80546020878701810191909152909501948101610f80565b9050823461036b57602036600319011261036b573563ffffffff60e01b811680910361036b5760209250632483248360e11b8114908115610ff8575b5015158152f35b6380ac58cd60e01b81149150811561102a575b8115611019575b5083610ff1565b6301ffc9a760e01b14905083611012565b635b5e139f60e01b8114915061100b565b5f5b83811061104c5750505f910152565b818101518382015260200161103d565b906020916110758151809281855285808601910161103b565b601f01601f1916010190565b60e081019081106001600160401b0382111761109c57604052565b634e487b7160e01b5f52604160045260245ffd5b602081019081106001600160401b0382111761109c57604052565b90601f801991011681019081106001600160401b0382111761109c57604052565b6001600160401b03811161109c57601f01601f191660200190565b929192611113826110ec565b9161112160405193846110cb565b82948184528183011161113d578281602093845f960137010152565b5f80fd5b9080601f8301121561113d5781602061115c93359101611107565b90565b90600182811c9216801561118d575b602083101461117957565b634e487b7160e01b5f52602260045260245ffd5b91607f169161116e565b9060405191825f8254926111aa8461115f565b9081845260019485811690815f1461121557506001146111d5575b50506111d3925003836110cb565b565b909391505f52602090815f20935f915b8183106111fd5750506111d393508201015f806111c5565b855488840185015294850194879450918301916111e5565b9150506111d394506020925060ff191682840152151560051b8201015f806111c5565b9361127c6112989461126e60c0989561126061128a969d9c9b9d60e08b5260e08b019061105c565b9089820360208b015261105c565b90878203604089015261105c565b90858203606087015261105c565b90838203608085015261105c565b6001600160a01b0390951660a08201520152565b600435906001600160a01b038216820361113d57565b602435906001600160a01b038216820361113d57565b606090600319011261113d576001600160a01b0390600435828116810361113d5791602435908116810361113d579060443590565b61010060031982011261113d576004916001600160401b0390833582811161113d578361133b918601611141565b936024356001600160a01b038116810361113d579360443584811161113d5781611366918401611141565b9360643581811161113d578261137d918501611141565b9360843582811161113d5783611394918601611141565b9360a43583811161113d57846113ab918301611141565b9360c43584811161113d57816113c2918401611141565b9360e43590811161113d5761115c9201611141565b6007546001600160a01b031633036113eb57565b60405163118cdaa760e01b8152336004820152602490fd5b6001600160a01b039182169290918315611586575f928284528260209560028752604096848888205416968791331515806114f0575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92846114bf575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a4169283830361149e5750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b5f87815260046020526040902080546001600160a01b0319169055848352600381528b832080545f19019055611465565b91939450915080611545575b1561150c5785929187915f611439565b878688611529576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b50338714801561156a575b806114fc57508582526004815233858984205416146114fc565b5086825260058152878220338352815260ff8883205416611550565b604051633250574960e11b81525f6004820152602490fd5b5f818152600260205260409020546001600160a01b03169081156115c0575090565b60249060405190637e27328960e01b82526004820152fd5b90939192833b6115ea575b5050505050565b604051630a85bd0160e11b8082526001600160a01b03938416600483015295831660248201526044810191909152608060648201529492169260209291859061163790608483019061105c565b039483815f978189895af18691816116e0575b506116aa575050503d5f146116a1573d611663816110ec565b9061167160405192836110cb565b81528093823d92013e5b8251928361169c57604051633250574960e11b815260048101849052602490fd5b019050fd5b6060925061167b565b919450915063ffffffff60e01b16036116c857505f808080806115e3565b60249060405190633250574960e11b82526004820152fd5b9091508481813d831161171d575b6116f881836110cb565b8101031261171957516001600160e01b03198116810361171957905f61164a565b8680fd5b503d6116ee565b81811061172f575050565b5f8155600101611724565b96959694939091929480511561234c576001600160a01b038316156123155760ff6040516020818451611770818385890161103b565b8101600b81520301902054166122c457600854975f1989146122b0576001890160085560405161179f816110b0565b5f8082528a8152600260205260409020546001600160a01b0316801515908b908261227d575b6001600160a01b0388165f818152600360209081526040808320805460010190558583526002909152812080546001600160a01b031916831790559091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080a461226557843b612118575b50885f52600660205260405f2085516001600160401b03811161109c57611859825461115f565b601f81116120e8575b50806020601f8211600114612085575f9161207a575b508160011b915f199060031b1c19161790555b7ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce760206040518b8152a18860405160208185516118cb8183858a0161103b565b8101600981520301902055885f52600a60205260405f2082516001600160401b03811161109c576118fc825461115f565b601f811161204a575b50806020601f8211600114611fe7575f91611fdc575b508160011b915f199060031b1c19161790555b6040516020818451611943818385890161103b565b8101600b815203019020600160ff198254161790556040519561196587611081565b8787528360208801526040870152606086015286608086015260018060a01b03831660a08601524260c086015260405160208183516119a7818385880161103b565b8101600c81520301902085518051906001600160401b03821161109c5781906119d0845461115f565b601f8111611fac575b50602090601f8311600114611f44575f92611f39575b50508160011b915f199060031b1c19161781555b60208601518051906001600160401b03821161109c578190611a28600185015461115f565b601f8111611f06575b50602090601f8311600114611e98575f92611e8d575b50508160011b915f199060031b1c19161760018201555b60408601518051906001600160401b03821161109c578190611a83600285015461115f565b601f8111611e5a575b50602090601f8311600114611dec575f92611de1575b50508160011b915f199060031b1c19161760028201555b60608601518051906001600160401b03821161109c578190611ade600385015461115f565b601f8111611dae575b50602090601f8311600114611d40575f92611d35575b50508160011b915f199060031b1c19161760038201555b60808601519586516001600160401b03811161109c578a97611b39600485015461115f565b601f8111611cf7575b50602090601f8311600114611c4d57611c3c95611c079895600660c0611c2397877f900e2494d9e8ea8c594277b19fd4e792c0b2f20704db2852aa7911515a9438879e9c98611c1598611bed985f92611c42575b50508160011b915f199060031b1c19161760048501555b6005840160018060a01b0360a0830151166bffffffffffffffffffffffff60a01b825416179055015191015560206040519282848094519384920161103b565b81010390209960405197889760808952608089019061105c565b90878203602089015261105c565b90858203604087015261105c565b83810360608501526001600160a01b039091169761105c565b0390a490565b015190505f80611b96565b90600485015f5260205f20915f5b601f1985168110611cdc575095611c079895600660c0611c23976001887f900e2494d9e8ea8c594277b19fd4e792c0b2f20704db2852aa7911515a9438879f9d9998611bed98611c3c9e611c159b601f19811610611cc4575b505050811b016004850155611bad565b01515f1960f88460031b161c191690555f8080611cb4565b8183015184558e9b5060019093019260209283019201611c5b565b611d2590600486015f5260205f20601f850160051c81019160208610611d2b575b601f0160051c0190611724565b5f611b42565b9091508190611d18565b015190505f80611afd565b9250600384015f5260205f20905f935b601f1984168510611d93576001945083601f19811610611d7b575b505050811b016003820155611b14565b01515f1960f88460031b161c191690555f8080611d6b565b81810151835560209485019460019093019290910190611d50565b611ddb90600386015f5260205f20601f850160051c81019160208610611d2b57601f0160051c0190611724565b5f611ae7565b015190505f80611aa2565b9250600284015f5260205f20905f935b601f1984168510611e3f576001945083601f19811610611e27575b505050811b016002820155611ab9565b01515f1960f88460031b161c191690555f8080611e17565b81810151835560209485019460019093019290910190611dfc565b611e8790600286015f5260205f20601f850160051c81019160208610611d2b57601f0160051c0190611724565b5f611a8c565b015190505f80611a47565b9250600184015f5260205f20905f935b601f1984168510611eeb576001945083601f19811610611ed3575b505050811b016001820155611a5e565b01515f1960f88460031b161c191690555f8080611ec3565b81810151835560209485019460019093019290910190611ea8565b611f3390600186015f5260205f20601f850160051c81019160208610611d2b57601f0160051c0190611724565b5f611a31565b015190505f806119ef565b9250835f5260205f20905f935b601f1984168510611f91576001945083601f19811610611f79575b505050811b018155611a03565b01515f1960f88460031b161c191690555f8080611f6c565b81810151835560209485019460019093019290910190611f51565b611fd690855f5260205f20601f850160051c81019160208610611d2b57601f0160051c0190611724565b5f6119d9565b90508401515f61191b565b9150825f5260205f205f925b601f1983168410612032576001935082601f1981161061201a575b5050811b01905561192e565b8601515f1960f88460031b161c191690555f8061200e565b86810151825560209384019360019092019101611ff3565b61207490835f5260205f20601f840160051c81019160208510611d2b57601f0160051c0190611724565b5f611905565b90508701515f611878565b9150825f5260205f205f925b601f19831684106120d0576001935082601f198116106120b8575b5050811b01905561188b565b8901515f1960f88460031b161c191690555f806120ac565b89810151825560209384019360019092019101612091565b61211290835f5260205f20601f840160051c81019160208510611d2b57601f0160051c0190611724565b5f611862565b602061215e91868c5f989e9d9c9b9a9998604051809681958294630a85bd0160e11b8452336004850152846024850152604484015260806064840152608483019061105c565b03926001600160a01b03165af15f9181612220575b506121da578a3d156121d2573d9061218a826110ec565b9161219860405193846110cb565b82523d5f602084013e5b815191826121cb57604051633250574960e11b81526001600160a01b0383166004820152602490fd5b6020915001fd5b6060906121a2565b630a85bd0160e19b95969798999a9b1b9063ffffffff60e01b16036121ff575f611832565b604051633250574960e11b81526001600160a01b0385166004820152602490fd5b9091506020813d60201161225d575b8161223c602093836110cb565b8101031261113d57516001600160e01b03198116810361113d57905f612173565b3d915061222f565b6040516339e3563760e11b81525f6004820152602490fd5b5f82815260046020526040902080546001600160a01b0319169055805f52600360205260405f205f1981540190556117c5565b634e487b7160e01b5f52601160045260245ffd5b60405162461bcd60e51b815260206004820152602360248201527f4e465420616c7265616479206d696e74656420666f7220746869732076656869604482015262636c6560e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f496e7370656374696f6e2049442063616e6e6f7420626520656d7074790000006044820152606490fd5b1561239857565b60405162461bcd60e51b815260206004820152602260248201527f4e4654206e6f74206d696e74656420666f72207468697320696e73706563746960448201526137b760f11b6064820152608490fd5b156123ef57565b60405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b612435815461115f565b908161243f575050565b81601f5f9311600114612450575055565b90808391825261246f601f60208420940160051c840160018501611724565b555556fea2646970667358221220b345686a286d1c9f6ec0b83b0e6e136348fcb69ae1de5ef07f5a3b5204811a9364736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "256:8337:19:-:0;;;;;;-1:-1:-1;;;;;;;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;256:8337:19;;;;;;;;;;;;-1:-1:-1;256:8337:19;;;;;;;;;;;;;;;;-1:-1:-1;256:8337:19;;;;;;;;;;;;;;-1:-1:-1;256:8337:19;;;;;;;;;;;;;;;-1:-1:-1;;;;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;256:8337:19;;;;;;;;;;;;;;1273:26:0;;1269:95;;3004:6;256:8337:19;;-1:-1:-1;;;;;;256:8337:19;;;;;;;;;;;;3052:40:0;;;;1438:19:19;256:8337;;;;;;;;1269:95:0;256:8337:19;;;;1322:31:0;;;;;;;;;256:8337:19;1322:31:0;256:8337:19;;;;-1:-1:-1;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;256:8337:19;;;;;;;;;;;;;-1:-1:-1;;;256:8337:19;;;;;;;;;;;;;;;;-1:-1:-1;;;256:8337:19;;;;;;;;;;;;-1:-1:-1;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;256:8337:19;;;;;;;;;;;;;-1:-1:-1;;;256:8337:19;;;;;;;;;;;;;;;;;;;-1:-1:-1;256:8337:19;;;;;-1:-1:-1;256:8337:19;;-1:-1:-1;256:8337:19;;;;;;;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;;;;:::o",
  "deployedSourceMap": "256:8337:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5470:7:5;256:8337:19;;;;;;-1:-1:-1;;;;;256:8337:19;;;;;6199:64;;256:8337;;6207:31;;6199:64;:::i;:::-;256:8337;;6311:19;256:8337;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;6376:11;256:8337;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;5470:7:5;256:8337:19;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;6442:9;6466:10;;6491:9;;6515:16;;256:8337;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;256:8337:19;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;256:8337:19;;;;2627:22:0;;2623:91;;256:8337:19;;3004:6:0;256:8337:19;;;;;;;;3004:6:0;256:8337:19;;3052:40:0;;;;256:8337:19;;2623:91:0;256:8337:19;-1:-1:-1;;;2672:31:0;;;;;256:8337:19;;;;;2672:31:0;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;256:8337:19;;;;;3776:18:5;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;256:8337:19;;;;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;;;;;;;;;:::i;:::-;;;;4139:70;256:8337;;;;;;;;;;;;;;;:::i;:::-;;;4147:9;256:8337;;;;;;;;4139:70;:::i;:::-;256:8337;;;;;;;;;;;;:::i;:::-;;;4227:19;256:8337;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;256:8337:19;;;;;;;1308:22:8;;;:::i;:::-;;256:8337:19;;1367:10:8;256:8337:19;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;256:8337:19;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;3849:63;256:8337;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;3849:63;:::i;256:8337::-;;;;;;;;;;;;;;;;-1:-1:-1;;256:8337:19;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;;;;;;4851:4:5;256:8337:19;;;;;;;;;;;;:::i;:::-;4766:7:5;;;;;;:::i;:::-;735:10:11;4851:4:5;:::i;:::-;256:8337:19;;;;;;;;;;;-1:-1:-1;;256:8337:19;;;;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;651:40;256:8337;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;256:8337:19;;;;;;;;;;;;524:53;256:8337;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;256:8337:19;;;;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;;;;;;;;;:::i;:::-;;;;5314:70;256:8337;;;;;;;;;;;;;;;:::i;5314:70::-;256:8337;;;;;;;;;;;;:::i;:::-;;;5431:11;256:8337;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5489:9;5513:10;;5539:9;;5563:16;;256:8337;;;;;;;:::i;:::-;;;;;;;;7319:95;256:8337;;;:::i;:::-;1500:62:0;;;;;;;;;;;;:::i;:::-;7319:95:19;:::i;256:8337::-;;;;;;;;;-1:-1:-1;;256:8337:19;;;;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;256:8337:19;;15418:22:5;;15414:91;;735:10:11;;256:8337:19;;15514:18:5;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;15575:41:5;256:8337:19;735:10:11;15575:41:5;;256:8337:19;;15414:91:5;256:8337:19;;;;15463:31:5;;;;;;;;256:8337:19;15463:31:5;256:8337:19;;;;;;;;;;;;;;;;;;2473:7:5;256:8337:19;;;;;;:::i;:::-;;;;;;;;;2473:7:5;;;;256:8337:19;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:6:0;256:8337:19;;;-1:-1:-1;;;;;256:8337:19;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;3004:6;256:8337:19;;-1:-1:-1;;;;;;256:8337:19;;;;;;;-1:-1:-1;;;;;256:8337:19;3052:40:0;256:8337:19;;3052:40:0;256:8337:19;;;;;;;;;;;-1:-1:-1;;256:8337:19;;;;-1:-1:-1;;;;;256:8337:19;;:::i;:::-;;1947:19:5;;;1943:87;;256:8337:19;;;;;;;;;;;;;;;;;;1943:87:5;256:8337:19;;-1:-1:-1;;;1989:30:5;;;;;256:8337:19;;;1989:30:5;256:8337:19;;;;;;;;;-1:-1:-1;;256:8337:19;;;;;2192:22:5;256:8337:19;;;2192:22:5;:::i;:::-;256:8337:19;;-1:-1:-1;;;;;256:8337:19;;;;;;;;;;;;4851:4:5;256:8337:19;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;4766:7:5;;;;;:::i;256:8337:19:-;;;;;;;;;-1:-1:-1;;256:8337:19;;;;;;;;5470:7:5;256:8337:19;;;;;;;;;;;;4482:64;;-1:-1:-1;;;;;256:8337:19;4490:31;;4482:64;:::i;:::-;256:8337;;4564:19;256:8337;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;5470:7:5;256:8337:19;;;;;;;;;;;;;7577:10;7556:31;:56;;;;256:8337;;;;;;;;;;7734:19;256:8337;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;7780:19;256:8337;;;;;;;;;;7734:19;256:8337;;7824:35;256:8337;;;7824:35;:::i;:::-;256:8337;;;;;;;;;;;:::i;:::-;;;7877:9;256:8337;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;7918:11;256:8337;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;5470:7:5;256:8337:19;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;5470:7:5;256:8337:19;;;;;;;5470:7:5;8830:18;;;;;8826:256;;256:8337:19;;;;;;;;;;-1:-1:-1;;;;;;256:8337:19;;;9246:27:5;256:8337:19;;9246:27:5;11281:96;;256:8337:19;;;11281:96:5;256:8337:19;-1:-1:-1;;;11335:31:5;;;;;256:8337:19;;;-1:-1:-1;11335:31:5;8826:256;256:8337:19;;;;15066:15:5;256:8337:19;;;;;;;-1:-1:-1;;;;;;256:8337:19;;;;;;;;;;;;;;-1:-1:-1;;256:8337:19;;;8826:256:5;;256:8337:19;;;-1:-1:-1;;;256:8337:19;;;;;;;;;;;;;-1:-1:-1;;;256:8337:19;;;;;;;7556:56;7577:10;;256:8337;1710:6:0;256:8337:19;;7591:21;7556:56;;256:8337;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;6820:15;256:8337;-1:-1:-1;;256:8337:19;;;;;;;;;;;;;;;;;-1:-1:-1;;;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;14663:22:5;;;:::i;:::-;735:10:11;14813:18:5;;:35;;;256:8337:19;14813:69:5;;;256:8337:19;14809:142:5;;-1:-1:-1;;;;;256:8337:19;;;;;;;;;15003:28:5;;;;256:8337:19;;;;;;;;-1:-1:-1;;;;;;256:8337:19;;;;;;;;14809:142:5;256:8337:19;;-1:-1:-1;;;14909:27:5;;735:10:11;14909:27:5;;;256:8337:19;;;14909:27:5;14813:69;-1:-1:-1;;;;;;256:8337:19;;;;3776:18:5;256:8337:19;;;;;;;735:10:11;256:8337:19;;;;;;;;;;14852:30:5;14813:69;;:35;-1:-1:-1;;;;;;256:8337:19;;735:10:11;14835:13:5;;14813:35;;256:8337:19;;;;;;;;;-1:-1:-1;;256:8337:19;;;;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;;;;;;;;;:::i;:::-;;;996:49;256:8337;;;;;;996:49;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;256:8337;996:49;;;:::i;:::-;;;;;:::i;:::-;256:8337;996:49;256:8337;;;;;996:49;;;256:8337;;996:49;;256:8337;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;256:8337:19;;;;;;;;;3385:22:5;;;:::i;:::-;-1:-1:-1;256:8337:19;;;;;;;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;256:8337:19;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1086:35:8;;;:75;;;;256:8337:19;;;;;;;1086:75:8;-1:-1:-1;;;1664:40:5;;;-1:-1:-1;1664:104:5;;;;1086:75:8;1664:156:5;;;;1086:75:8;;;;;1664:156:5;-1:-1:-1;;;829:40:14;;-1:-1:-1;1664:156:5;;;:104;-1:-1:-1;;;1720:48:5;;;-1:-1:-1;1664:104:5;;256:8337:19;;;;;;;;-1:-1:-1;;256:8337:19;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;256:8337:19;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;:::o;:::-;-1:-1:-1;;;;;256:8337:19;;;;;;-1:-1:-1;;256:8337:19;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;256:8337:19;;;;;;:::o;:::-;-1:-1:-1;256:8337:19;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;256:8337:19;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;256:8337:19;;;;-1:-1:-1;256:8337:19;;-1:-1:-1;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;256:8337:19;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;256:8337:19;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;256:8337:19;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;256:8337:19;;;;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;1796:162:0:-;1710:6;256:8337:19;-1:-1:-1;;;;;256:8337:19;735:10:11;1855:23:0;1851:101;;1796:162::o;1851:101::-;256:8337:19;;-1:-1:-1;;;1901:40:0;;735:10:11;1901:40:0;;;256:8337:19;;;1901:40:0;3852:578:5;-1:-1:-1;;;;;256:8337:19;;;;3852:578:5;;3946:16;;3942:87;;-1:-1:-1;256:8337:19;;;;;;;5470:7:5;256:8337:19;;;;;;;;;;735:10:11;;;;8704:18:5;;8700:86;;;3852:578;8830:18;;5470:7;9246:27;8830:18;;8826:256;;3852:578;256:8337:19;;;9156:9:5;256:8337:19;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;256:8337:19;;;;;;9246:27:5;256:8337:19;4319:21:5;;;;4315:109;;3852:578;;;;:::o;4315:109::-;256:8337:19;;;;4363:50:5;;;;;;;;;256:8337:19;;;;;;;;;4363:50:5;8826:256;256:8337:19;;;;15066:15:5;256:8337:19;;;;;;;-1:-1:-1;;;;;;256:8337:19;;;;;;9037:9:5;256:8337:19;;;;;;;-1:-1:-1;;256:8337:19;;;8826:256:5;;8700:86;6185:127;;;;;;;;;8700:86;6862:39;6858:255;;8700:86;;;;;;;;6858:255;6921:19;;;256:8337:19;;;;;11335:31:5;;;;6967;;;;;256:8337:19;6967:31:5;6917:186;256:8337:19;;;7044:44:5;;;;;;735:10:11;7044:44:5;;;256:8337:19;;;;;7044:44:5;6185:127;735:10:11;;6223:16:5;;:52;;;;6185:127;6223:88;6185:127;6223:88;256:8337:19;;;;5705:15:5;256:8337:19;;735:10:11;256:8337:19;;;;;;6279:32:5;6185:127;;6223:52;256:8337:19;;;;3776:18:5;256:8337:19;;;;;735:10:11;256:8337:19;;;;;;;;;;6223:52:5;;3942:87;256:8337:19;;-1:-1:-1;;;3985:33:5;;3960:1;3985:33;;;256:8337:19;;;3985:33:5;15858:241;-1:-1:-1;256:8337:19;;;5470:7:5;256:8337:19;;;;;;-1:-1:-1;;;;;256:8337:19;;15987:19:5;;15983:88;;16080:12;15858:241;:::o;15983:88::-;256:8337:19;;;;11335:31:5;;;;16029;;;;;256:8337:19;16029:31:5;993:926:10;;;;;1173:14;;1169:744;;993:926;;;;;;:::o;1169:744::-;256:8337:19;;-1:-1:-1;;;1211:67:10;;;-1:-1:-1;;;;;256:8337:19;;;1211:67:10;;;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;1211:67:10;;256:8337:19;;;;;;;;;;:::i;:::-;1211:67:10;1190:1;;;;1211:67;;;;;;;;;;;1169:744;-1:-1:-1;1207:696:10;;1518:385;;;256:8337:19;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1568:18:10;;;256:8337:19;;-1:-1:-1;;;1672:39:10;;1211:67;1672:39;;256:8337:19;;;;;1672:39:10;1564:325;1758:113;;-1:-1:-1;1758:113:10;256:8337:19;;;-1:-1:-1;256:8337:19;;1207:696:10;256:8337:19;;;;;;;;;1325:51:10;1321:182;;1207:696;1169:744;;;;;;;1321:182;256:8337:19;;;;3985:33:5;;;;1445:39:10;;1211:67;1445:39;;256:8337:19;1445:39:10;1211:67;;;;;;;;;;;;;;;;;:::i;:::-;;;256:8337:19;;;;;-1:-1:-1;;;;;;256:8337:19;;;;;;1211:67:10;;;;256:8337:19;;;;1211:67:10;;;;;256:8337:19;;;;;;;;:::o;:::-;;;;;;;;2074:1516;;;;;;;;;;256:8337;;2437:30;256:8337;;-1:-1:-1;;;;;256:8337:19;;2520:16;256:8337;;;;;;;;;;;;;;;;:::i;:::-;;;2626:9;256:8337;;;;;;;;;;2753:15;256:8337;;-1:-1:-1;;256:8337:19;;;;;;;2753:15;256:8337;;;;;;:::i;:::-;;;;;;;;5470:7:5;256:8337:19;;;;;;-1:-1:-1;;;;;256:8337:19;8830:18:5;;;;256:8337:19;;8830:18:5;8826:256;;2074:1516:19;-1:-1:-1;;;;;256:8337:19;;;;;;9156:9:5;256:8337:19;;;;;;;;;;;;;;;;;5470:7:5;256:8337:19;;;;;;;-1:-1:-1;;;;;;256:8337:19;;;;;;;9246:27:5;;;256:8337:19;9246:27:5;9849:96;;1173:14:10;;1169:744;;2074:1516:19;256:8337;;;;2022:10:8;256:8337:19;;;;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;;:::i;:::-;;;;;;2074:1516;256:8337;;;;;;;;;;;;;;;;;;;;;;;9156:9:5;256:8337:19;;;;;;;;2068:23:8;256:8337:19;;;;;;2068:23:8;256:8337:19;;;;;;;;;;;;;;:::i;:::-;;;2931:19;256:8337;;;;;;;;;;2985:19;256:8337;;;;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9156:9:5;256:8337:19;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2626:9;256:8337;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;3169:265;256:8337;3169:265;;256:8337;;3169:265;;256:8337;3169:265;;;256:8337;3169:265;;;;256:8337;;;;;;;;;3169:265;;256:8337;3407:15;3169:265;;;256:8337;;;;;;;;;;;;;;:::i;:::-;;;3141:11;256:8337;;;;;;;;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9156:9:5;256:8337:19;;;;;;;;;3169:265;;256:8337;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9156:9:5;256:8337:19;;;;;;;;;;;3169:265;;256:8337;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;5470:7:5;256:8337:19;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9156:9:5;256:8337:19;;;;;5470:7:5;256:8337:19;;;;3169:265;;;256:8337;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;9156:9:5;256:8337:19;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9156:9:5;256:8337:19;;;;;9156:9:5;256:8337:19;;;;3169:265;;;256:8337;;;;-1:-1:-1;;;;;256:8337:19;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2022:10:8;3169:265:19;256:8337;;;3460:87;256:8337;;;;;;;;;;;;;;;;;;;;;9156:9:5;256:8337:19;;;;;;;;;;;;;;;;;;;3169:265;;256:8337;;;;;;;;;;;3169:265;256:8337;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;3169:265;256:8337;;3169:265;256:8337;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;3169:265;256:8337;;;-1:-1:-1;;;;;256:8337:19;;;;;:::i;:::-;3460:87;;;2074:1516;:::o;256:8337::-;;;;-1:-1:-1;256:8337:19;;;;;;;;;;;;;;;;;-1:-1:-1;;256:8337:19;;;;;;;;;;;2022:10:8;3169:265:19;256:8337;;;;3460:87;256:8337;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9156:9:5;256:8337:19;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;256:8337:19;;;;;;;;-1:-1:-1;256:8337:19;;;;;;;9156:9:5;256:8337:19;;;;;;;;;;;-1:-1:-1;;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;9156:9:5;256:8337:19;;;;;;;;;;;;9156:9:5;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9156:9:5;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;256:8337:19;;;;;;;5470:7:5;256:8337:19;;;;;;;;;;;-1:-1:-1;;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;5470:7:5;256:8337:19;;;;;;;;;;;;9156:9:5;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5470:7:5;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;256:8337:19;;;;;;;;;;;;;;;;;;;-1:-1:-1;;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9156:9:5;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;256:8337:19;;;;;;;;;;;;;;;;;-1:-1:-1;;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9156:9:5;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9156:9:5;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9156:9:5;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1169:744:10;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;;1211:67:10;;735:10:11;1211:67:10;;;256:8337:19;;;;;;;;;;;;;;;;;;;;:::i;:::-;1211:67:10;;-1:-1:-1;;;;;256:8337:19;1211:67:10;;256:8337:19;;1211:67:10;;;1169:744;-1:-1:-1;1207:696:10;;1518:385;256:8337:19;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;1568:18:10;;;256:8337:19;;-1:-1:-1;;;1672:39:10;;-1:-1:-1;;;;;256:8337:19;;1211:67:10;1672:39;;256:8337:19;;;1672:39:10;1564:325;256:8337:19;1758:113:10;;;;256:8337:19;;;;;1207:696:10;256:8337:19;;;;;;;;;;;;;;;;1325:51:10;1321:182;;1169:744;;;1321:182;256:8337:19;;-1:-1:-1;;;1445:39:10;;-1:-1:-1;;;;;256:8337:19;;1211:67:10;1445:39;;256:8337:19;;;1445:39:10;1211:67;;;;256:8337:19;1211:67:10;;256:8337:19;1211:67:10;;;;;;256:8337:19;1211:67:10;;;:::i;:::-;;;256:8337:19;;;;;-1:-1:-1;;;;;;256:8337:19;;;;;;1211:67:10;;;;;;;-1:-1:-1;1211:67:10;;9849:96:5;256:8337:19;;-1:-1:-1;;;9903:31:5;;256:8337:19;9903:31:5;;;256:8337:19;;;9903:31:5;8826:256;256:8337:19;;;;15066:15:5;256:8337:19;;;;;;;-1:-1:-1;;;;;;256:8337:19;;;;;;9037:9:5;256:8337:19;;;;;;;;;;;;8826:256:5;;256:8337:19;;;;;;;;;;;;;;;-1:-1:-1;;;256:8337:19;;;;;;;;;;;;;;;;;-1:-1:-1;;;256:8337:19;;;;;;;;;;-1:-1:-1;;;256:8337:19;;;;;;;;;;;;-1:-1:-1;;;256:8337:19;;;;;;;;;;-1:-1:-1;;;256:8337:19;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;256:8337:19;;;;;;;;;;;;;;;;;-1:-1:-1;;;256:8337:19;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;256:8337:19;;;;;;;;;;;;-1:-1:-1;;;256:8337:19;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract VehicleNFT is ERC721, ERC721URIStorage, Ownable {\r\n    uint256 private _tokenIdCounter;\r\n    \r\n    // Mapping from inspection ID to token ID\r\n    mapping(string => uint256) public inspectionToTokenId;\r\n    \r\n    // Mapping from token ID to inspection ID\r\n    mapping(uint256 => string) public tokenIdToInspection;\r\n    \r\n    // Mapping to track if NFT was minted for inspection ID\r\n    mapping(string => bool) public nftMinted;\r\n    \r\n    // Store vehicle data on-chain (optional, for reference)\r\n    struct VehicleInfo {\r\n        string make;\r\n        string model;\r\n        string year;\r\n        string vehicleType;\r\n        string registrationNumber;\r\n        address mintedTo;\r\n        uint256 mintTimestamp;\r\n    }\r\n    \r\n    mapping(string => VehicleInfo) public vehicleInfo;\r\n    \r\n    // Events\r\n    event VehicleNFTMinted(\r\n        uint256 indexed tokenId, \r\n        string indexed inspectionId, \r\n        address indexed owner,\r\n        string tokenURI,\r\n        string make,\r\n        string model,\r\n        string registrationNumber\r\n    );\r\n    \r\n    constructor(address initialOwner) ERC721(\"Vehicle Certificate NFT\", \"VCNFT\") Ownable(initialOwner) {\r\n        _tokenIdCounter = 1; // Start from 1\r\n    }\r\n    \r\n    /**\r\n     * @dev Mint NFT for a vehicle (independent version)\r\n     * @param inspectionId The vehicle inspection ID\r\n     * @param to Address to mint NFT to\r\n     * @param _tokenURI Metadata URI for the NFT\r\n     * @param make Vehicle make (optional, for on-chain storage)\r\n     * @param model Vehicle model (optional, for on-chain storage)\r\n     * @param year Vehicle year (optional, for on-chain storage)\r\n     * @param vehicleType Vehicle type (optional, for on-chain storage)\r\n     * @param registrationNumber Registration number (optional, for on-chain storage)\r\n     */\r\n    function mintVehicleNFT(\r\n        string memory inspectionId,\r\n        address to,\r\n        string memory _tokenURI,\r\n        string memory make,\r\n        string memory model,\r\n        string memory year,\r\n        string memory vehicleType,\r\n        string memory registrationNumber\r\n    ) public returns (uint256) {\r\n        // Basic validation\r\n        require(bytes(inspectionId).length > 0, \"Inspection ID cannot be empty\");\r\n        require(to != address(0), \"Invalid address\");\r\n        \r\n        // Check if NFT already minted\r\n        require(!nftMinted[inspectionId], \"NFT already minted for this vehicle\");\r\n        \r\n        // Mint the NFT\r\n        uint256 tokenId = _tokenIdCounter;\r\n        _tokenIdCounter++;\r\n        \r\n        _safeMint(to, tokenId);\r\n        _setTokenURI(tokenId, _tokenURI);\r\n        \r\n        // Update mappings\r\n        inspectionToTokenId[inspectionId] = tokenId;\r\n        tokenIdToInspection[tokenId] = inspectionId;\r\n        nftMinted[inspectionId] = true;\r\n        \r\n        // Store vehicle info on-chain (optional)\r\n        vehicleInfo[inspectionId] = VehicleInfo({\r\n            make: make,\r\n            model: model,\r\n            year: year,\r\n            vehicleType: vehicleType,\r\n            registrationNumber: registrationNumber,\r\n            mintedTo: to,\r\n            mintTimestamp: block.timestamp\r\n        });\r\n        \r\n        emit VehicleNFTMinted(tokenId, inspectionId, to, _tokenURI, make, model, registrationNumber);\r\n        \r\n        return tokenId;\r\n    }\r\n    \r\n    /**\r\n     * @dev Simplified mint function (backward compatibility)\r\n     */\r\n    function mintVehicleNFT(\r\n        string memory inspectionId,\r\n        address to,\r\n        string memory _tokenURI\r\n    ) public returns (uint256) {\r\n        return mintVehicleNFT(inspectionId, to, _tokenURI, \"\", \"\", \"\", \"\", \"\");\r\n    }\r\n    \r\n    /**\r\n     * @dev Get token ID for a given inspection ID\r\n     */\r\n    function getTokenIdByInspection(string memory inspectionId) \r\n        public \r\n        view \r\n        returns (uint256) \r\n    {\r\n        require(nftMinted[inspectionId], \"NFT not minted for this inspection\");\r\n        return inspectionToTokenId[inspectionId];\r\n    }\r\n    \r\n    /**\r\n     * @dev Get inspection ID for a given token ID\r\n     */\r\n    function getInspectionByTokenId(uint256 tokenId) \r\n        public \r\n        view \r\n        returns (string memory) \r\n    {\r\n        require(_ownerOf(tokenId) != address(0), \"Token does not exist\");\r\n        return tokenIdToInspection[tokenId];\r\n    }\r\n    \r\n    /**\r\n     * @dev Check if NFT exists for inspection ID\r\n     */\r\n    function nftExistsForInspection(string memory inspectionId) \r\n        public \r\n        view \r\n        returns (bool) \r\n    {\r\n        return nftMinted[inspectionId];\r\n    }\r\n    \r\n    /**\r\n     * @dev Get vehicle info stored on-chain\r\n     */\r\n    function getVehicleInfo(string memory inspectionId) \r\n        public \r\n        view \r\n        returns (\r\n            string memory make,\r\n            string memory model,\r\n            string memory year,\r\n            string memory vehicleType,\r\n            string memory registrationNumber,\r\n            address mintedTo,\r\n            uint256 mintTimestamp\r\n        ) \r\n    {\r\n        require(nftMinted[inspectionId], \"NFT not minted for this inspection\");\r\n        \r\n        VehicleInfo memory info = vehicleInfo[inspectionId];\r\n        return (\r\n            info.make,\r\n            info.model, \r\n            info.year,\r\n            info.vehicleType,\r\n            info.registrationNumber,\r\n            info.mintedTo,\r\n            info.mintTimestamp\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * @dev Get vehicle details by token ID\r\n     */\r\n    function getVehicleDetailsByTokenId(uint256 tokenId) \r\n        public \r\n        view \r\n        returns (\r\n            string memory make,\r\n            string memory model,\r\n            string memory year,\r\n            string memory vehicleType,\r\n            string memory registrationNumber,\r\n            string memory inspectionId,\r\n            address mintedTo,\r\n            uint256 mintTimestamp\r\n        ) \r\n    {\r\n        require(_ownerOf(tokenId) != address(0), \"Token does not exist\");\r\n        \r\n        string memory inspection = tokenIdToInspection[tokenId];\r\n        VehicleInfo memory info = vehicleInfo[inspection];\r\n        \r\n        return (\r\n            info.make,\r\n            info.model,\r\n            info.year,\r\n            info.vehicleType,\r\n            info.registrationNumber,\r\n            inspection,\r\n            info.mintedTo,\r\n            info.mintTimestamp\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * @dev Get total number of minted NFTs\r\n     */\r\n    function totalSupply() public view returns (uint256) {\r\n        return _tokenIdCounter - 1; // Subtract 1 since we start from 1\r\n    }\r\n    \r\n    /**\r\n     * @dev Owner can mint NFT for any vehicle (admin function)\r\n     */\r\n    function adminMintNFT(\r\n        string memory inspectionId,\r\n        address to,\r\n        string memory _tokenURI,\r\n        string memory make,\r\n        string memory model,\r\n        string memory year,\r\n        string memory vehicleType,\r\n        string memory registrationNumber\r\n    ) public onlyOwner returns (uint256) {\r\n        return mintVehicleNFT(inspectionId, to, _tokenURI, make, model, year, vehicleType, registrationNumber);\r\n    }\r\n    \r\n    /**\r\n     * @dev Burn NFT and clean up mappings\r\n     */\r\n    function burnNFT(uint256 tokenId) public {\r\n        require(_ownerOf(tokenId) == msg.sender || owner() == msg.sender, \"Not authorized to burn\");\r\n        \r\n        // Clean up mappings before burning\r\n        string memory inspectionId = tokenIdToInspection[tokenId];\r\n        delete inspectionToTokenId[inspectionId];\r\n        delete tokenIdToInspection[tokenId];\r\n        delete nftMinted[inspectionId];\r\n        delete vehicleInfo[inspectionId];\r\n        \r\n        _burn(tokenId);\r\n    }\r\n    \r\n    /**\r\n     * @dev Override required by Solidity for multiple inheritance\r\n     */\r\n    function tokenURI(uint256 tokenId)\r\n        public\r\n        view\r\n        override(ERC721, ERC721URIStorage)\r\n        returns (string memory)\r\n    {\r\n        return super.tokenURI(tokenId);\r\n    }\r\n    \r\n    /**\r\n     * @dev Override required by Solidity for multiple inheritance\r\n     */\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        override(ERC721, ERC721URIStorage)\r\n        returns (bool)\r\n    {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n}",
  "sourcePath": "F:\\TaxTron-FYP\\taxtron\\backend\\contracts\\NftMiniting.sol",
  "ast": {
    "absolutePath": "project:/contracts/NftMiniting.sol",
    "exportedSymbols": {
      "Context": [
        1671
      ],
      "ERC165": [
        3149
      ],
      "ERC721": [
        1273
      ],
      "ERC721URIStorage": [
        1536
      ],
      "ERC721Utils": [
        1641
      ],
      "IERC165": [
        3161
      ],
      "IERC4906": [
        175
      ],
      "IERC721": [
        1390
      ],
      "IERC721Errors": [
        269
      ],
      "IERC721Metadata": [
        1564
      ],
      "Ownable": [
        147
      ],
      "Strings": [
        3125
      ],
      "VehicleNFT": [
        7216
      ]
    },
    "id": 7217,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6693,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:19"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 6694,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7217,
        "sourceUnit": 1274,
        "src": "61:57:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "id": 6695,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7217,
        "sourceUnit": 1537,
        "src": "120:78:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 6696,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7217,
        "sourceUnit": 148,
        "src": "200:52:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6697,
              "name": "ERC721",
              "nameLocations": [
                "279:6:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1273,
              "src": "279:6:19"
            },
            "id": 6698,
            "nodeType": "InheritanceSpecifier",
            "src": "279:6:19"
          },
          {
            "baseName": {
              "id": 6699,
              "name": "ERC721URIStorage",
              "nameLocations": [
                "287:16:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1536,
              "src": "287:16:19"
            },
            "id": 6700,
            "nodeType": "InheritanceSpecifier",
            "src": "287:16:19"
          },
          {
            "baseName": {
              "id": 6701,
              "name": "Ownable",
              "nameLocations": [
                "305:7:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 147,
              "src": "305:7:19"
            },
            "id": 6702,
            "nodeType": "InheritanceSpecifier",
            "src": "305:7:19"
          }
        ],
        "canonicalName": "VehicleNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7216,
        "linearizedBaseContracts": [
          7216,
          147,
          1536,
          1273,
          269,
          1564,
          175,
          1390,
          3149,
          3161,
          1671
        ],
        "name": "VehicleNFT",
        "nameLocation": "265:10:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6704,
            "mutability": "mutable",
            "name": "_tokenIdCounter",
            "nameLocation": "336:15:19",
            "nodeType": "VariableDeclaration",
            "scope": 7216,
            "src": "320:31:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6703,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "320:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "a3f2a14d",
            "id": 6708,
            "mutability": "mutable",
            "name": "inspectionToTokenId",
            "nameLocation": "445:19:19",
            "nodeType": "VariableDeclaration",
            "scope": 7216,
            "src": "411:53:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 6707,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 6705,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "419:6:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "411:26:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 6706,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "429:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b37a6d1e",
            "id": 6712,
            "mutability": "mutable",
            "name": "tokenIdToInspection",
            "nameLocation": "558:19:19",
            "nodeType": "VariableDeclaration",
            "scope": 7216,
            "src": "524:53:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 6711,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 6709,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "532:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "524:26:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 6710,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "543:6:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b8859a44",
            "id": 6716,
            "mutability": "mutable",
            "name": "nftMinted",
            "nameLocation": "682:9:19",
            "nodeType": "VariableDeclaration",
            "scope": 7216,
            "src": "651:40:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 6715,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 6713,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "659:6:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "651:23:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 6714,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "669:4:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "VehicleNFT.VehicleInfo",
            "id": 6731,
            "members": [
              {
                "constant": false,
                "id": 6718,
                "mutability": "mutable",
                "name": "make",
                "nameLocation": "803:4:19",
                "nodeType": "VariableDeclaration",
                "scope": 6731,
                "src": "796:11:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 6717,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "796:6:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6720,
                "mutability": "mutable",
                "name": "model",
                "nameLocation": "825:5:19",
                "nodeType": "VariableDeclaration",
                "scope": 6731,
                "src": "818:12:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 6719,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "818:6:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6722,
                "mutability": "mutable",
                "name": "year",
                "nameLocation": "848:4:19",
                "nodeType": "VariableDeclaration",
                "scope": 6731,
                "src": "841:11:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 6721,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "841:6:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6724,
                "mutability": "mutable",
                "name": "vehicleType",
                "nameLocation": "870:11:19",
                "nodeType": "VariableDeclaration",
                "scope": 6731,
                "src": "863:18:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 6723,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "863:6:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6726,
                "mutability": "mutable",
                "name": "registrationNumber",
                "nameLocation": "899:18:19",
                "nodeType": "VariableDeclaration",
                "scope": 6731,
                "src": "892:25:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 6725,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "892:6:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6728,
                "mutability": "mutable",
                "name": "mintedTo",
                "nameLocation": "936:8:19",
                "nodeType": "VariableDeclaration",
                "scope": 6731,
                "src": "928:16:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6727,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "928:7:19",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6730,
                "mutability": "mutable",
                "name": "mintTimestamp",
                "nameLocation": "963:13:19",
                "nodeType": "VariableDeclaration",
                "scope": 6731,
                "src": "955:21:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6729,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "955:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "VehicleInfo",
            "nameLocation": "773:11:19",
            "nodeType": "StructDefinition",
            "scope": 7216,
            "src": "766:218:19",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "089fb0ac",
            "id": 6736,
            "mutability": "mutable",
            "name": "vehicleInfo",
            "nameLocation": "1034:11:19",
            "nodeType": "VariableDeclaration",
            "scope": 7216,
            "src": "996:49:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_VehicleInfo_$6731_storage_$",
              "typeString": "mapping(string => struct VehicleNFT.VehicleInfo)"
            },
            "typeName": {
              "id": 6735,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 6732,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1004:6:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "996:30:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_VehicleInfo_$6731_storage_$",
                "typeString": "mapping(string => struct VehicleNFT.VehicleInfo)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 6734,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 6733,
                  "name": "VehicleInfo",
                  "nameLocations": [
                    "1014:11:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6731,
                  "src": "1014:11:19"
                },
                "referencedDeclaration": 6731,
                "src": "1014:11:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_VehicleInfo_$6731_storage_ptr",
                  "typeString": "struct VehicleNFT.VehicleInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "900e2494d9e8ea8c594277b19fd4e792c0b2f20704db2852aa7911515a943887",
            "id": 6752,
            "name": "VehicleNFTMinted",
            "nameLocation": "1079:16:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6738,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1122:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6752,
                  "src": "1106:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6737,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1106:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6740,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "1156:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6752,
                  "src": "1141:27:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6739,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1141:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6742,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1196:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6752,
                  "src": "1180:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6744,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nameLocation": "1219:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6752,
                  "src": "1212:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6743,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1212:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6746,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "make",
                  "nameLocation": "1245:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6752,
                  "src": "1238:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6745,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6748,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "model",
                  "nameLocation": "1267:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6752,
                  "src": "1260:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6747,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1260:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6750,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "registrationNumber",
                  "nameLocation": "1290:18:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6752,
                  "src": "1283:25:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6749,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1095:220:19"
            },
            "src": "1073:243:19"
          },
          {
            "body": {
              "id": 6768,
              "nodeType": "Block",
              "src": "1427:54:19",
              "statements": [
                {
                  "expression": {
                    "id": 6766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6764,
                      "name": "_tokenIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6704,
                      "src": "1438:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 6765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1456:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1438:19:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6767,
                  "nodeType": "ExpressionStatement",
                  "src": "1438:19:19"
                }
              ]
            },
            "id": 6769,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "56656869636c65204365727469666963617465204e4654",
                    "id": 6757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1369:25:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7f913c6c546d21c02a5d871c0c3ec12d8af7a5051dfc9e331551ce8be8518af7",
                      "typeString": "literal_string \"Vehicle Certificate NFT\""
                    },
                    "value": "Vehicle Certificate NFT"
                  },
                  {
                    "hexValue": "56434e4654",
                    "id": 6758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1396:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_561f8095bfad5065228fc204975c5ba5db7ee0c3458474f9bc3c36138b806c3f",
                      "typeString": "literal_string \"VCNFT\""
                    },
                    "value": "VCNFT"
                  }
                ],
                "id": 6759,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6756,
                  "name": "ERC721",
                  "nameLocations": [
                    "1362:6:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1273,
                  "src": "1362:6:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "1362:42:19"
              },
              {
                "arguments": [
                  {
                    "id": 6761,
                    "name": "initialOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6754,
                    "src": "1413:12:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 6762,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6760,
                  "name": "Ownable",
                  "nameLocations": [
                    "1405:7:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "1405:7:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "1405:21:19"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6754,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "1348:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6769,
                  "src": "1340:20:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1340:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1339:22:19"
            },
            "returnParameters": {
              "id": 6763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1427:0:19"
            },
            "scope": 7216,
            "src": "1328:153:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6882,
              "nodeType": "Block",
              "src": "2389:1201:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 6794,
                                "name": "inspectionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6772,
                                "src": "2443:12:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 6793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2437:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 6792,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "2437:5:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2437:19:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 6796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2457:6:19",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2437:26:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 6797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2466:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2437:30:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e7370656374696f6e2049442063616e6e6f7420626520656d707479",
                        "id": 6799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2469:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6cf1a1956d694017dfd563d0121f6bdf884bd80febc119da7dd7f74e3de819d6",
                          "typeString": "literal_string \"Inspection ID cannot be empty\""
                        },
                        "value": "Inspection ID cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6cf1a1956d694017dfd563d0121f6bdf884bd80febc119da7dd7f74e3de819d6",
                          "typeString": "literal_string \"Inspection ID cannot be empty\""
                        }
                      ],
                      "id": 6791,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2429:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2429:72:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6801,
                  "nodeType": "ExpressionStatement",
                  "src": "2429:72:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6803,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6774,
                          "src": "2520:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2534:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2526:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6804,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2526:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2526:10:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2520:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642061646472657373",
                        "id": 6809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2538:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        },
                        "value": "Invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        }
                      ],
                      "id": 6802,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2512:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2512:44:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6811,
                  "nodeType": "ExpressionStatement",
                  "src": "2512:44:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2625:24:19",
                        "subExpression": {
                          "baseExpression": {
                            "id": 6813,
                            "name": "nftMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6716,
                            "src": "2626:9:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 6815,
                          "indexExpression": {
                            "id": 6814,
                            "name": "inspectionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6772,
                            "src": "2636:12:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2626:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e465420616c7265616479206d696e74656420666f7220746869732076656869636c65",
                        "id": 6817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2651:37:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e58864017839366155a2e2a4543e332aef0c3c59fc572d7734fefbd087f01918",
                          "typeString": "literal_string \"NFT already minted for this vehicle\""
                        },
                        "value": "NFT already minted for this vehicle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e58864017839366155a2e2a4543e332aef0c3c59fc572d7734fefbd087f01918",
                          "typeString": "literal_string \"NFT already minted for this vehicle\""
                        }
                      ],
                      "id": 6812,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2617:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2617:72:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6819,
                  "nodeType": "ExpressionStatement",
                  "src": "2617:72:19"
                },
                {
                  "assignments": [
                    6821
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6821,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "2743:7:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 6882,
                      "src": "2735:15:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6820,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2735:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6823,
                  "initialValue": {
                    "id": 6822,
                    "name": "_tokenIdCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6704,
                    "src": "2753:15:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2735:33:19"
                },
                {
                  "expression": {
                    "id": 6825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2779:17:19",
                    "subExpression": {
                      "id": 6824,
                      "name": "_tokenIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6704,
                      "src": "2779:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6826,
                  "nodeType": "ExpressionStatement",
                  "src": "2779:17:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6828,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6774,
                        "src": "2827:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6829,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6821,
                        "src": "2831:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6827,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        951,
                        981
                      ],
                      "referencedDeclaration": 951,
                      "src": "2817:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2817:22:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6831,
                  "nodeType": "ExpressionStatement",
                  "src": "2817:22:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6833,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6821,
                        "src": "2863:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6834,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6776,
                        "src": "2872:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 6832,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1535,
                      "src": "2850:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 6835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2850:32:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6836,
                  "nodeType": "ExpressionStatement",
                  "src": "2850:32:19"
                },
                {
                  "expression": {
                    "id": 6841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6837,
                        "name": "inspectionToTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6708,
                        "src": "2931:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 6839,
                      "indexExpression": {
                        "id": 6838,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6772,
                        "src": "2951:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2931:33:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6840,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6821,
                      "src": "2967:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2931:43:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6842,
                  "nodeType": "ExpressionStatement",
                  "src": "2931:43:19"
                },
                {
                  "expression": {
                    "id": 6847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6843,
                        "name": "tokenIdToInspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6712,
                        "src": "2985:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 6845,
                      "indexExpression": {
                        "id": 6844,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6821,
                        "src": "3005:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2985:28:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6846,
                      "name": "inspectionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6772,
                      "src": "3016:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2985:43:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 6848,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:43:19"
                },
                {
                  "expression": {
                    "id": 6853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6849,
                        "name": "nftMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6716,
                        "src": "3039:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 6851,
                      "indexExpression": {
                        "id": 6850,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6772,
                        "src": "3049:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3039:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 6852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3065:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3039:30:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6854,
                  "nodeType": "ExpressionStatement",
                  "src": "3039:30:19"
                },
                {
                  "expression": {
                    "id": 6868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6855,
                        "name": "vehicleInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6736,
                        "src": "3141:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_VehicleInfo_$6731_storage_$",
                          "typeString": "mapping(string memory => struct VehicleNFT.VehicleInfo storage ref)"
                        }
                      },
                      "id": 6857,
                      "indexExpression": {
                        "id": 6856,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6772,
                        "src": "3153:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3141:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VehicleInfo_$6731_storage",
                        "typeString": "struct VehicleNFT.VehicleInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6859,
                          "name": "make",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6778,
                          "src": "3202:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 6860,
                          "name": "model",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6780,
                          "src": "3228:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 6861,
                          "name": "year",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6782,
                          "src": "3254:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 6862,
                          "name": "vehicleType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6784,
                          "src": "3286:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 6863,
                          "name": "registrationNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6786,
                          "src": "3332:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 6864,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6774,
                          "src": "3375:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 6865,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3407:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 6866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3413:9:19",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3407:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 6858,
                        "name": "VehicleInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6731,
                        "src": "3169:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_VehicleInfo_$6731_storage_ptr_$",
                          "typeString": "type(struct VehicleNFT.VehicleInfo storage pointer)"
                        }
                      },
                      "id": 6867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3196:4:19",
                        "3221:5:19",
                        "3248:4:19",
                        "3273:11:19",
                        "3312:18:19",
                        "3365:8:19",
                        "3392:13:19"
                      ],
                      "names": [
                        "make",
                        "model",
                        "year",
                        "vehicleType",
                        "registrationNumber",
                        "mintedTo",
                        "mintTimestamp"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3169:265:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VehicleInfo_$6731_memory_ptr",
                        "typeString": "struct VehicleNFT.VehicleInfo memory"
                      }
                    },
                    "src": "3141:293:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VehicleInfo_$6731_storage",
                      "typeString": "struct VehicleNFT.VehicleInfo storage ref"
                    }
                  },
                  "id": 6869,
                  "nodeType": "ExpressionStatement",
                  "src": "3141:293:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6871,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6821,
                        "src": "3477:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6872,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6772,
                        "src": "3486:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 6873,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6774,
                        "src": "3500:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6874,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6776,
                        "src": "3504:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 6875,
                        "name": "make",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6778,
                        "src": "3515:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 6876,
                        "name": "model",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6780,
                        "src": "3521:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 6877,
                        "name": "registrationNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6786,
                        "src": "3528:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 6870,
                      "name": "VehicleNFTMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6752,
                      "src": "3460:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory,address,string memory,string memory,string memory,string memory)"
                      }
                    },
                    "id": 6878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3460:87:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6879,
                  "nodeType": "EmitStatement",
                  "src": "3455:92:19"
                },
                {
                  "expression": {
                    "id": 6880,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6821,
                    "src": "3575:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6790,
                  "id": 6881,
                  "nodeType": "Return",
                  "src": "3568:14:19"
                }
              ]
            },
            "documentation": {
              "id": 6770,
              "nodeType": "StructuredDocumentation",
              "src": "1493:575:19",
              "text": " @dev Mint NFT for a vehicle (independent version)\n @param inspectionId The vehicle inspection ID\n @param to Address to mint NFT to\n @param _tokenURI Metadata URI for the NFT\n @param make Vehicle make (optional, for on-chain storage)\n @param model Vehicle model (optional, for on-chain storage)\n @param year Vehicle year (optional, for on-chain storage)\n @param vehicleType Vehicle type (optional, for on-chain storage)\n @param registrationNumber Registration number (optional, for on-chain storage)"
            },
            "functionSelector": "d01f3bdf",
            "id": 6883,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintVehicleNFT",
            "nameLocation": "2083:14:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6772,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "2122:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6883,
                  "src": "2108:26:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6771,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2108:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6774,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2153:2:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6883,
                  "src": "2145:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6776,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nameLocation": "2180:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6883,
                  "src": "2166:23:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6775,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2166:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6778,
                  "mutability": "mutable",
                  "name": "make",
                  "nameLocation": "2214:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6883,
                  "src": "2200:18:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6777,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2200:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6780,
                  "mutability": "mutable",
                  "name": "model",
                  "nameLocation": "2243:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6883,
                  "src": "2229:19:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6779,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2229:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6782,
                  "mutability": "mutable",
                  "name": "year",
                  "nameLocation": "2273:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6883,
                  "src": "2259:18:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6781,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2259:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6784,
                  "mutability": "mutable",
                  "name": "vehicleType",
                  "nameLocation": "2302:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6883,
                  "src": "2288:25:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6783,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2288:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6786,
                  "mutability": "mutable",
                  "name": "registrationNumber",
                  "nameLocation": "2338:18:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6883,
                  "src": "2324:32:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6785,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2324:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2097:266:19"
            },
            "returnParameters": {
              "id": 6790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6789,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6883,
                  "src": "2380:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2380:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2379:9:19"
            },
            "scope": 7216,
            "src": "2074:1516:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6906,
              "nodeType": "Block",
              "src": "3831:89:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6896,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6886,
                        "src": "3864:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 6897,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6888,
                        "src": "3878:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6898,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6890,
                        "src": "3882:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 6899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3893:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 6900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3897:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 6901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3901:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 6902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3905:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 6903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3909:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 6895,
                      "name": "mintVehicleNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6883,
                        6907
                      ],
                      "referencedDeclaration": 6883,
                      "src": "3849:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory,address,string memory,string memory,string memory,string memory,string memory,string memory) returns (uint256)"
                      }
                    },
                    "id": 6904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3849:63:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6894,
                  "id": 6905,
                  "nodeType": "Return",
                  "src": "3842:70:19"
                }
              ]
            },
            "documentation": {
              "id": 6884,
              "nodeType": "StructuredDocumentation",
              "src": "3602:75:19",
              "text": " @dev Simplified mint function (backward compatibility)"
            },
            "functionSelector": "c02d2be4",
            "id": 6907,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintVehicleNFT",
            "nameLocation": "3692:14:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6886,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "3731:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6907,
                  "src": "3717:26:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6885,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3717:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6888,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3762:2:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6907,
                  "src": "3754:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6887,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3754:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6890,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nameLocation": "3789:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6907,
                  "src": "3775:23:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6889,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3775:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3706:99:19"
            },
            "returnParameters": {
              "id": 6894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6893,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6907,
                  "src": "3822:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3822:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3821:9:19"
            },
            "scope": 7216,
            "src": "3683:237:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6926,
              "nodeType": "Block",
              "src": "4128:140:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 6916,
                          "name": "nftMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6716,
                          "src": "4147:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                            "typeString": "mapping(string memory => bool)"
                          }
                        },
                        "id": 6918,
                        "indexExpression": {
                          "id": 6917,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6910,
                          "src": "4157:12:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4147:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4654206e6f74206d696e74656420666f72207468697320696e7370656374696f6e",
                        "id": 6919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4172:36:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d09216fe61b9b491f99081e19edf72dac307b9bc415ad358062d30cdd6889d1f",
                          "typeString": "literal_string \"NFT not minted for this inspection\""
                        },
                        "value": "NFT not minted for this inspection"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d09216fe61b9b491f99081e19edf72dac307b9bc415ad358062d30cdd6889d1f",
                          "typeString": "literal_string \"NFT not minted for this inspection\""
                        }
                      ],
                      "id": 6915,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4139:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4139:70:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6921,
                  "nodeType": "ExpressionStatement",
                  "src": "4139:70:19"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 6922,
                      "name": "inspectionToTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6708,
                      "src": "4227:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 6924,
                    "indexExpression": {
                      "id": 6923,
                      "name": "inspectionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6910,
                      "src": "4247:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4227:33:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6914,
                  "id": 6925,
                  "nodeType": "Return",
                  "src": "4220:40:19"
                }
              ]
            },
            "documentation": {
              "id": 6908,
              "nodeType": "StructuredDocumentation",
              "src": "3932:64:19",
              "text": " @dev Get token ID for a given inspection ID"
            },
            "functionSelector": "d99f47f2",
            "id": 6927,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenIdByInspection",
            "nameLocation": "4011:22:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6910,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "4048:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6927,
                  "src": "4034:26:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6909,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4034:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4033:28:19"
            },
            "returnParameters": {
              "id": 6914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6913,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6927,
                  "src": "4113:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4113:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4112:9:19"
            },
            "scope": 7216,
            "src": "4002:266:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6951,
              "nodeType": "Block",
              "src": "4471:129:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 6937,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6930,
                              "src": "4499:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 6936,
                            "name": "_ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 694,
                            "src": "4490:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 6938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4490:17:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4519:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4511:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6939,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4511:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4511:10:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4490:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20646f6573206e6f74206578697374",
                        "id": 6944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4523:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726",
                          "typeString": "literal_string \"Token does not exist\""
                        },
                        "value": "Token does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726",
                          "typeString": "literal_string \"Token does not exist\""
                        }
                      ],
                      "id": 6935,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4482:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4482:64:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6946,
                  "nodeType": "ExpressionStatement",
                  "src": "4482:64:19"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 6947,
                      "name": "tokenIdToInspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6712,
                      "src": "4564:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 6949,
                    "indexExpression": {
                      "id": 6948,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6930,
                      "src": "4584:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4564:28:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 6934,
                  "id": 6950,
                  "nodeType": "Return",
                  "src": "4557:35:19"
                }
              ]
            },
            "documentation": {
              "id": 6928,
              "nodeType": "StructuredDocumentation",
              "src": "4280:64:19",
              "text": " @dev Get inspection ID for a given token ID"
            },
            "functionSelector": "317d70f1",
            "id": 6952,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspectionByTokenId",
            "nameLocation": "4359:22:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6930,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4390:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6952,
                  "src": "4382:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4382:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4381:17:19"
            },
            "returnParameters": {
              "id": 6934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6933,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6952,
                  "src": "4450:13:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6932,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4450:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4449:15:19"
            },
            "scope": 7216,
            "src": "4350:250:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6964,
              "nodeType": "Block",
              "src": "4804:49:19",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 6960,
                      "name": "nftMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6716,
                      "src": "4822:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                        "typeString": "mapping(string memory => bool)"
                      }
                    },
                    "id": 6962,
                    "indexExpression": {
                      "id": 6961,
                      "name": "inspectionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6955,
                      "src": "4832:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4822:23:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6959,
                  "id": 6963,
                  "nodeType": "Return",
                  "src": "4815:30:19"
                }
              ]
            },
            "documentation": {
              "id": 6953,
              "nodeType": "StructuredDocumentation",
              "src": "4612:63:19",
              "text": " @dev Check if NFT exists for inspection ID"
            },
            "functionSelector": "7c249495",
            "id": 6965,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nftExistsForInspection",
            "nameLocation": "4690:22:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6955,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "4727:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6965,
                  "src": "4713:26:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6954,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4713:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4712:28:19"
            },
            "returnParameters": {
              "id": 6959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6958,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6965,
                  "src": "4792:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6957,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4792:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4791:6:19"
            },
            "scope": 7216,
            "src": "4681:172:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7015,
              "nodeType": "Block",
              "src": "5303:394:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 6986,
                          "name": "nftMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6716,
                          "src": "5322:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                            "typeString": "mapping(string memory => bool)"
                          }
                        },
                        "id": 6988,
                        "indexExpression": {
                          "id": 6987,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6968,
                          "src": "5332:12:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5322:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4654206e6f74206d696e74656420666f72207468697320696e7370656374696f6e",
                        "id": 6989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5347:36:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d09216fe61b9b491f99081e19edf72dac307b9bc415ad358062d30cdd6889d1f",
                          "typeString": "literal_string \"NFT not minted for this inspection\""
                        },
                        "value": "NFT not minted for this inspection"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d09216fe61b9b491f99081e19edf72dac307b9bc415ad358062d30cdd6889d1f",
                          "typeString": "literal_string \"NFT not minted for this inspection\""
                        }
                      ],
                      "id": 6985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5314:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5314:70:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6991,
                  "nodeType": "ExpressionStatement",
                  "src": "5314:70:19"
                },
                {
                  "assignments": [
                    6994
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6994,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "5424:4:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 7015,
                      "src": "5405:23:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VehicleInfo_$6731_memory_ptr",
                        "typeString": "struct VehicleNFT.VehicleInfo"
                      },
                      "typeName": {
                        "id": 6993,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6992,
                          "name": "VehicleInfo",
                          "nameLocations": [
                            "5405:11:19"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6731,
                          "src": "5405:11:19"
                        },
                        "referencedDeclaration": 6731,
                        "src": "5405:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VehicleInfo_$6731_storage_ptr",
                          "typeString": "struct VehicleNFT.VehicleInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6998,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6995,
                      "name": "vehicleInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6736,
                      "src": "5431:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_VehicleInfo_$6731_storage_$",
                        "typeString": "mapping(string memory => struct VehicleNFT.VehicleInfo storage ref)"
                      }
                    },
                    "id": 6997,
                    "indexExpression": {
                      "id": 6996,
                      "name": "inspectionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6968,
                      "src": "5443:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5431:25:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VehicleInfo_$6731_storage",
                      "typeString": "struct VehicleNFT.VehicleInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5405:51:19"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 6999,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6994,
                          "src": "5489:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VehicleInfo_$6731_memory_ptr",
                            "typeString": "struct VehicleNFT.VehicleInfo memory"
                          }
                        },
                        "id": 7000,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5494:4:19",
                        "memberName": "make",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6718,
                        "src": "5489:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 7001,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6994,
                          "src": "5513:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VehicleInfo_$6731_memory_ptr",
                            "typeString": "struct VehicleNFT.VehicleInfo memory"
                          }
                        },
                        "id": 7002,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5518:5:19",
                        "memberName": "model",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6720,
                        "src": "5513:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 7003,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6994,
                          "src": "5539:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VehicleInfo_$6731_memory_ptr",
                            "typeString": "struct VehicleNFT.VehicleInfo memory"
                          }
                        },
                        "id": 7004,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5544:4:19",
                        "memberName": "year",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6722,
                        "src": "5539:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 7005,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6994,
                          "src": "5563:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VehicleInfo_$6731_memory_ptr",
                            "typeString": "struct VehicleNFT.VehicleInfo memory"
                          }
                        },
                        "id": 7006,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5568:11:19",
                        "memberName": "vehicleType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6724,
                        "src": "5563:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 7007,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6994,
                          "src": "5594:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VehicleInfo_$6731_memory_ptr",
                            "typeString": "struct VehicleNFT.VehicleInfo memory"
                          }
                        },
                        "id": 7008,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5599:18:19",
                        "memberName": "registrationNumber",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6726,
                        "src": "5594:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 7009,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6994,
                          "src": "5632:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VehicleInfo_$6731_memory_ptr",
                            "typeString": "struct VehicleNFT.VehicleInfo memory"
                          }
                        },
                        "id": 7010,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5637:8:19",
                        "memberName": "mintedTo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6728,
                        "src": "5632:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 7011,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6994,
                          "src": "5660:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VehicleInfo_$6731_memory_ptr",
                            "typeString": "struct VehicleNFT.VehicleInfo memory"
                          }
                        },
                        "id": 7012,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5665:13:19",
                        "memberName": "mintTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6730,
                        "src": "5660:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 7013,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5474:215:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$",
                      "typeString": "tuple(string memory,string memory,string memory,string memory,string memory,address,uint256)"
                    }
                  },
                  "functionReturnParameters": 6984,
                  "id": 7014,
                  "nodeType": "Return",
                  "src": "5467:222:19"
                }
              ]
            },
            "documentation": {
              "id": 6966,
              "nodeType": "StructuredDocumentation",
              "src": "4865:58:19",
              "text": " @dev Get vehicle info stored on-chain"
            },
            "functionSelector": "ab32c508",
            "id": 7016,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVehicleInfo",
            "nameLocation": "4938:14:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6968,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "4967:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7016,
                  "src": "4953:26:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6967,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4953:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4952:28:19"
            },
            "returnParameters": {
              "id": 6984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6971,
                  "mutability": "mutable",
                  "name": "make",
                  "nameLocation": "5060:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7016,
                  "src": "5046:18:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6970,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5046:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6973,
                  "mutability": "mutable",
                  "name": "model",
                  "nameLocation": "5093:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7016,
                  "src": "5079:19:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6972,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5079:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6975,
                  "mutability": "mutable",
                  "name": "year",
                  "nameLocation": "5127:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7016,
                  "src": "5113:18:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6974,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5113:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6977,
                  "mutability": "mutable",
                  "name": "vehicleType",
                  "nameLocation": "5160:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7016,
                  "src": "5146:25:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6976,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5146:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6979,
                  "mutability": "mutable",
                  "name": "registrationNumber",
                  "nameLocation": "5200:18:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7016,
                  "src": "5186:32:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6978,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5186:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6981,
                  "mutability": "mutable",
                  "name": "mintedTo",
                  "nameLocation": "5241:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7016,
                  "src": "5233:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5233:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6983,
                  "mutability": "mutable",
                  "name": "mintTimestamp",
                  "nameLocation": "5272:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7016,
                  "src": "5264:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5264:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5031:265:19"
            },
            "scope": 7216,
            "src": "4929:768:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7080,
              "nodeType": "Block",
              "src": "6188:486:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 7040,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7019,
                              "src": "6216:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 7039,
                            "name": "_ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 694,
                            "src": "6207:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 7041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6207:17:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6236:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6228:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7042,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6228:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6228:10:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6207:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20646f6573206e6f74206578697374",
                        "id": 7047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6240:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726",
                          "typeString": "literal_string \"Token does not exist\""
                        },
                        "value": "Token does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726",
                          "typeString": "literal_string \"Token does not exist\""
                        }
                      ],
                      "id": 7038,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6199:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6199:64:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7049,
                  "nodeType": "ExpressionStatement",
                  "src": "6199:64:19"
                },
                {
                  "assignments": [
                    7051
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7051,
                      "mutability": "mutable",
                      "name": "inspection",
                      "nameLocation": "6298:10:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 7080,
                      "src": "6284:24:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 7050,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6284:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7055,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7052,
                      "name": "tokenIdToInspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6712,
                      "src": "6311:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 7054,
                    "indexExpression": {
                      "id": 7053,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7019,
                      "src": "6331:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6311:28:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6284:55:19"
                },
                {
                  "assignments": [
                    7058
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7058,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "6369:4:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 7080,
                      "src": "6350:23:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VehicleInfo_$6731_memory_ptr",
                        "typeString": "struct VehicleNFT.VehicleInfo"
                      },
                      "typeName": {
                        "id": 7057,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7056,
                          "name": "VehicleInfo",
                          "nameLocations": [
                            "6350:11:19"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6731,
                          "src": "6350:11:19"
                        },
                        "referencedDeclaration": 6731,
                        "src": "6350:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VehicleInfo_$6731_storage_ptr",
                          "typeString": "struct VehicleNFT.VehicleInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7062,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7059,
                      "name": "vehicleInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6736,
                      "src": "6376:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_VehicleInfo_$6731_storage_$",
                        "typeString": "mapping(string memory => struct VehicleNFT.VehicleInfo storage ref)"
                      }
                    },
                    "id": 7061,
                    "indexExpression": {
                      "id": 7060,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7051,
                      "src": "6388:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6376:23:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VehicleInfo_$6731_storage",
                      "typeString": "struct VehicleNFT.VehicleInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6350:49:19"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 7063,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7058,
                          "src": "6442:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VehicleInfo_$6731_memory_ptr",
                            "typeString": "struct VehicleNFT.VehicleInfo memory"
                          }
                        },
                        "id": 7064,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6447:4:19",
                        "memberName": "make",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6718,
                        "src": "6442:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 7065,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7058,
                          "src": "6466:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VehicleInfo_$6731_memory_ptr",
                            "typeString": "struct VehicleNFT.VehicleInfo memory"
                          }
                        },
                        "id": 7066,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6471:5:19",
                        "memberName": "model",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6720,
                        "src": "6466:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 7067,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7058,
                          "src": "6491:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VehicleInfo_$6731_memory_ptr",
                            "typeString": "struct VehicleNFT.VehicleInfo memory"
                          }
                        },
                        "id": 7068,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6496:4:19",
                        "memberName": "year",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6722,
                        "src": "6491:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 7069,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7058,
                          "src": "6515:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VehicleInfo_$6731_memory_ptr",
                            "typeString": "struct VehicleNFT.VehicleInfo memory"
                          }
                        },
                        "id": 7070,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6520:11:19",
                        "memberName": "vehicleType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6724,
                        "src": "6515:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 7071,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7058,
                          "src": "6546:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VehicleInfo_$6731_memory_ptr",
                            "typeString": "struct VehicleNFT.VehicleInfo memory"
                          }
                        },
                        "id": 7072,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6551:18:19",
                        "memberName": "registrationNumber",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6726,
                        "src": "6546:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 7073,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7051,
                        "src": "6584:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 7074,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7058,
                          "src": "6609:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VehicleInfo_$6731_memory_ptr",
                            "typeString": "struct VehicleNFT.VehicleInfo memory"
                          }
                        },
                        "id": 7075,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6614:8:19",
                        "memberName": "mintedTo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6728,
                        "src": "6609:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 7076,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7058,
                          "src": "6637:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VehicleInfo_$6731_memory_ptr",
                            "typeString": "struct VehicleNFT.VehicleInfo memory"
                          }
                        },
                        "id": 7077,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6642:13:19",
                        "memberName": "mintTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6730,
                        "src": "6637:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 7078,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6427:239:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$",
                      "typeString": "tuple(string memory,string memory,string memory,string memory,string memory,string memory,address,uint256)"
                    }
                  },
                  "functionReturnParameters": 7037,
                  "id": 7079,
                  "nodeType": "Return",
                  "src": "6420:246:19"
                }
              ]
            },
            "documentation": {
              "id": 7017,
              "nodeType": "StructuredDocumentation",
              "src": "5709:57:19",
              "text": " @dev Get vehicle details by token ID"
            },
            "functionSelector": "f5348e71",
            "id": 7081,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVehicleDetailsByTokenId",
            "nameLocation": "5781:26:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7019,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5816:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7081,
                  "src": "5808:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5808:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5807:17:19"
            },
            "returnParameters": {
              "id": 7037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7022,
                  "mutability": "mutable",
                  "name": "make",
                  "nameLocation": "5904:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7081,
                  "src": "5890:18:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7021,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5890:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7024,
                  "mutability": "mutable",
                  "name": "model",
                  "nameLocation": "5937:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7081,
                  "src": "5923:19:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7023,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5923:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7026,
                  "mutability": "mutable",
                  "name": "year",
                  "nameLocation": "5971:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7081,
                  "src": "5957:18:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7025,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5957:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7028,
                  "mutability": "mutable",
                  "name": "vehicleType",
                  "nameLocation": "6004:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7081,
                  "src": "5990:25:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7027,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5990:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7030,
                  "mutability": "mutable",
                  "name": "registrationNumber",
                  "nameLocation": "6044:18:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7081,
                  "src": "6030:32:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7029,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6030:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7032,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "6091:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7081,
                  "src": "6077:26:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7031,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6077:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7034,
                  "mutability": "mutable",
                  "name": "mintedTo",
                  "nameLocation": "6126:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7081,
                  "src": "6118:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6118:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7036,
                  "mutability": "mutable",
                  "name": "mintTimestamp",
                  "nameLocation": "6157:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7081,
                  "src": "6149:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6149:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5875:306:19"
            },
            "scope": 7216,
            "src": "5772:902:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7091,
              "nodeType": "Block",
              "src": "6802:81:19",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7087,
                      "name": "_tokenIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6704,
                      "src": "6820:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 7088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6838:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "6820:19:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7086,
                  "id": 7090,
                  "nodeType": "Return",
                  "src": "6813:26:19"
                }
              ]
            },
            "documentation": {
              "id": 7082,
              "nodeType": "StructuredDocumentation",
              "src": "6686:57:19",
              "text": " @dev Get total number of minted NFTs"
            },
            "functionSelector": "18160ddd",
            "id": 7092,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "6758:11:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6769:2:19"
            },
            "returnParameters": {
              "id": 7086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7085,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7092,
                  "src": "6793:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7084,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6793:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6792:9:19"
            },
            "scope": 7216,
            "src": "6749:134:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7127,
              "nodeType": "Block",
              "src": "7301:121:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7117,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7095,
                        "src": "7334:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 7118,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7097,
                        "src": "7348:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7119,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7099,
                        "src": "7352:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 7120,
                        "name": "make",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7101,
                        "src": "7363:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 7121,
                        "name": "model",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7103,
                        "src": "7369:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 7122,
                        "name": "year",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7105,
                        "src": "7376:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 7123,
                        "name": "vehicleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7107,
                        "src": "7382:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 7124,
                        "name": "registrationNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7109,
                        "src": "7395:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 7116,
                      "name": "mintVehicleNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6883,
                        6907
                      ],
                      "referencedDeclaration": 6883,
                      "src": "7319:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory,address,string memory,string memory,string memory,string memory,string memory,string memory) returns (uint256)"
                      }
                    },
                    "id": 7125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7319:95:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7115,
                  "id": 7126,
                  "nodeType": "Return",
                  "src": "7312:102:19"
                }
              ]
            },
            "documentation": {
              "id": 7093,
              "nodeType": "StructuredDocumentation",
              "src": "6895:77:19",
              "text": " @dev Owner can mint NFT for any vehicle (admin function)"
            },
            "functionSelector": "a5ec4802",
            "id": 7128,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7112,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7111,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "7273:9:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "7273:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "7273:9:19"
              }
            ],
            "name": "adminMintNFT",
            "nameLocation": "6987:12:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7095,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "7024:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7128,
                  "src": "7010:26:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7094,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7010:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7097,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7055:2:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7128,
                  "src": "7047:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7047:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7099,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nameLocation": "7082:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7128,
                  "src": "7068:23:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7098,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7068:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7101,
                  "mutability": "mutable",
                  "name": "make",
                  "nameLocation": "7116:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7128,
                  "src": "7102:18:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7100,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7102:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7103,
                  "mutability": "mutable",
                  "name": "model",
                  "nameLocation": "7145:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7128,
                  "src": "7131:19:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7102,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7131:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7105,
                  "mutability": "mutable",
                  "name": "year",
                  "nameLocation": "7175:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7128,
                  "src": "7161:18:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7104,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7161:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7107,
                  "mutability": "mutable",
                  "name": "vehicleType",
                  "nameLocation": "7204:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7128,
                  "src": "7190:25:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7106,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7190:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7109,
                  "mutability": "mutable",
                  "name": "registrationNumber",
                  "nameLocation": "7240:18:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7128,
                  "src": "7226:32:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7108,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7226:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6999:266:19"
            },
            "returnParameters": {
              "id": 7115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7114,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7128,
                  "src": "7292:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7292:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7291:9:19"
            },
            "scope": 7216,
            "src": "6978:444:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7180,
              "nodeType": "Block",
              "src": "7537:449:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 7140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 7136,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7131,
                                "src": "7565:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 7135,
                              "name": "_ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 694,
                              "src": "7556:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 7137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7556:17:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 7138,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7577:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7581:6:19",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7577:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7556:31:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 7145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 7141,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "7591:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 7142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7591:7:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 7143,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7602:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7606:6:19",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7602:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7591:21:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7556:56:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a656420746f206275726e",
                        "id": 7147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7614:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816",
                          "typeString": "literal_string \"Not authorized to burn\""
                        },
                        "value": "Not authorized to burn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816",
                          "typeString": "literal_string \"Not authorized to burn\""
                        }
                      ],
                      "id": 7134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7548:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7548:91:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7149,
                  "nodeType": "ExpressionStatement",
                  "src": "7548:91:19"
                },
                {
                  "assignments": [
                    7151
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7151,
                      "mutability": "mutable",
                      "name": "inspectionId",
                      "nameLocation": "7719:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 7180,
                      "src": "7705:26:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 7150,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7705:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7155,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7152,
                      "name": "tokenIdToInspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6712,
                      "src": "7734:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 7154,
                    "indexExpression": {
                      "id": 7153,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7131,
                      "src": "7754:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7734:28:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7705:57:19"
                },
                {
                  "expression": {
                    "id": 7159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "7773:40:19",
                    "subExpression": {
                      "baseExpression": {
                        "id": 7156,
                        "name": "inspectionToTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6708,
                        "src": "7780:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 7158,
                      "indexExpression": {
                        "id": 7157,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7151,
                        "src": "7800:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7780:33:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7160,
                  "nodeType": "ExpressionStatement",
                  "src": "7773:40:19"
                },
                {
                  "expression": {
                    "id": 7164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "7824:35:19",
                    "subExpression": {
                      "baseExpression": {
                        "id": 7161,
                        "name": "tokenIdToInspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6712,
                        "src": "7831:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 7163,
                      "indexExpression": {
                        "id": 7162,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7131,
                        "src": "7851:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7831:28:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7165,
                  "nodeType": "ExpressionStatement",
                  "src": "7824:35:19"
                },
                {
                  "expression": {
                    "id": 7169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "7870:30:19",
                    "subExpression": {
                      "baseExpression": {
                        "id": 7166,
                        "name": "nftMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6716,
                        "src": "7877:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 7168,
                      "indexExpression": {
                        "id": 7167,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7151,
                        "src": "7887:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7877:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7170,
                  "nodeType": "ExpressionStatement",
                  "src": "7870:30:19"
                },
                {
                  "expression": {
                    "id": 7174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "7911:32:19",
                    "subExpression": {
                      "baseExpression": {
                        "id": 7171,
                        "name": "vehicleInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6736,
                        "src": "7918:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_VehicleInfo_$6731_storage_$",
                          "typeString": "mapping(string memory => struct VehicleNFT.VehicleInfo storage ref)"
                        }
                      },
                      "id": 7173,
                      "indexExpression": {
                        "id": 7172,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7151,
                        "src": "7930:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7918:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VehicleInfo_$6731_storage",
                        "typeString": "struct VehicleNFT.VehicleInfo storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7175,
                  "nodeType": "ExpressionStatement",
                  "src": "7911:32:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7177,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7131,
                        "src": "7970:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7176,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1014,
                      "src": "7964:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 7178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7964:14:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7179,
                  "nodeType": "ExpressionStatement",
                  "src": "7964:14:19"
                }
              ]
            },
            "documentation": {
              "id": 7129,
              "nodeType": "StructuredDocumentation",
              "src": "7434:56:19",
              "text": " @dev Burn NFT and clean up mappings"
            },
            "functionSelector": "2890e0d7",
            "id": 7181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnNFT",
            "nameLocation": "7505:7:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7131,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7521:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7181,
                  "src": "7513:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7513:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7512:17:19"
            },
            "returnParameters": {
              "id": 7133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7537:0:19"
            },
            "scope": 7216,
            "src": "7496:490:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              512,
              1516
            ],
            "body": {
              "id": 7197,
              "nodeType": "Block",
              "src": "8231:49:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7194,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7184,
                        "src": "8264:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7192,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "8249:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_VehicleNFT_$7216_$",
                          "typeString": "type(contract super VehicleNFT)"
                        }
                      },
                      "id": 7193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8255:8:19",
                      "memberName": "tokenURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1516,
                      "src": "8249:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 7195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8249:23:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 7191,
                  "id": 7196,
                  "nodeType": "Return",
                  "src": "8242:30:19"
                }
              ]
            },
            "documentation": {
              "id": 7182,
              "nodeType": "StructuredDocumentation",
              "src": "7998:80:19",
              "text": " @dev Override required by Solidity for multiple inheritance"
            },
            "functionSelector": "c87b56dd",
            "id": 7198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "8093:8:19",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7188,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 7186,
                  "name": "ERC721",
                  "nameLocations": [
                    "8167:6:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1273,
                  "src": "8167:6:19"
                },
                {
                  "id": 7187,
                  "name": "ERC721URIStorage",
                  "nameLocations": [
                    "8175:16:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1536,
                  "src": "8175:16:19"
                }
              ],
              "src": "8158:34:19"
            },
            "parameters": {
              "id": 7185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7184,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8110:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7198,
                  "src": "8102:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7183,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8102:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8101:17:19"
            },
            "returnParameters": {
              "id": 7191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7190,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7198,
                  "src": "8211:13:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7189,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8211:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8210:15:19"
            },
            "scope": 7216,
            "src": "8084:196:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              417,
              1459
            ],
            "body": {
              "id": 7214,
              "nodeType": "Block",
              "src": "8528:62:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7211,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7201,
                        "src": "8570:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 7209,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "8546:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_VehicleNFT_$7216_$",
                          "typeString": "type(contract super VehicleNFT)"
                        }
                      },
                      "id": 7210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8552:17:19",
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1459,
                      "src": "8546:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 7212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8546:36:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7208,
                  "id": 7213,
                  "nodeType": "Return",
                  "src": "8539:43:19"
                }
              ]
            },
            "documentation": {
              "id": 7199,
              "nodeType": "StructuredDocumentation",
              "src": "8292:80:19",
              "text": " @dev Override required by Solidity for multiple inheritance"
            },
            "functionSelector": "01ffc9a7",
            "id": 7215,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "8387:17:19",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7205,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 7203,
                  "name": "ERC721",
                  "nameLocations": [
                    "8473:6:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1273,
                  "src": "8473:6:19"
                },
                {
                  "id": 7204,
                  "name": "ERC721URIStorage",
                  "nameLocations": [
                    "8481:16:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1536,
                  "src": "8481:16:19"
                }
              ],
              "src": "8464:34:19"
            },
            "parameters": {
              "id": 7202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7201,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "8412:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7215,
                  "src": "8405:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 7200,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "8405:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8404:20:19"
            },
            "returnParameters": {
              "id": 7208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7207,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7215,
                  "src": "8517:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7206,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8517:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8516:6:19"
            },
            "scope": 7216,
            "src": "8378:212:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7217,
        "src": "256:8337:19",
        "usedErrors": [
          13,
          18,
          227,
          232,
          241,
          246,
          251,
          258,
          263,
          268
        ],
        "usedEvents": [
          24,
          167,
          174,
          1289,
          1298,
          1307,
          6752
        ]
      }
    ],
    "src": "33:8560:19"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256"
            }
          ],
          "name": "BatchMetadataUpdate",
          "type": "event"
        },
        "0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "MetadataUpdate",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x900e2494d9e8ea8c594277b19fd4e792c0b2f20704db2852aa7911515a943887": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "string",
              "name": "inspectionId",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "tokenURI",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "make",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "model",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "registrationNumber",
              "type": "string"
            }
          ],
          "name": "VehicleNFTMinted",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xc303134658E22e75b1494a1FCF5B91222380809f",
      "transactionHash": "0x48f9e521361cd7edf15110414addd736b5df2e076e317c21029ac5e9a8da0265"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-09-13T21:43:51.080Z",
  "devdoc": {
    "errors": {
      "ERC721IncorrectOwner(address,uint256,address)": [
        {
          "details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
          "params": {
            "owner": "Address of the current owner of a token.",
            "sender": "Address whose tokens are being transferred.",
            "tokenId": "Identifier number of a token."
          }
        }
      ],
      "ERC721InsufficientApproval(address,uint256)": [
        {
          "details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
          "params": {
            "operator": "Address that may be allowed to operate on tokens without being their owner.",
            "tokenId": "Identifier number of a token."
          }
        }
      ],
      "ERC721InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC721InvalidOperator(address)": [
        {
          "details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
          "params": {
            "operator": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC721InvalidOwner(address)": [
        {
          "details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
          "params": {
            "owner": "Address of the current owner of a token."
          }
        }
      ],
      "ERC721InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC721InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC721NonexistentToken(uint256)": [
        {
          "details": "Indicates a `tokenId` whose `owner` is the zero address.",
          "params": {
            "tokenId": "Identifier number of a token."
          }
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
      },
      "ApprovalForAll(address,address,bool)": {
        "details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
      },
      "BatchMetadataUpdate(uint256,uint256)": {
        "details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
      },
      "MetadataUpdate(uint256)": {
        "details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `tokenId` token is transferred from `from` to `to`."
      }
    },
    "kind": "dev",
    "methods": {
      "adminMintNFT(string,address,string,string,string,string,string,string)": {
        "details": "Owner can mint NFT for any vehicle (admin function)"
      },
      "approve(address,uint256)": {
        "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the number of tokens in ``owner``'s account."
      },
      "burnNFT(uint256)": {
        "details": "Burn NFT and clean up mappings"
      },
      "getApproved(uint256)": {
        "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "getInspectionByTokenId(uint256)": {
        "details": "Get inspection ID for a given token ID"
      },
      "getTokenIdByInspection(string)": {
        "details": "Get token ID for a given inspection ID"
      },
      "getVehicleDetailsByTokenId(uint256)": {
        "details": "Get vehicle details by token ID"
      },
      "getVehicleInfo(string)": {
        "details": "Get vehicle info stored on-chain"
      },
      "isApprovedForAll(address,address)": {
        "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
      },
      "mintVehicleNFT(string,address,string)": {
        "details": "Simplified mint function (backward compatibility)"
      },
      "mintVehicleNFT(string,address,string,string,string,string,string,string)": {
        "details": "Mint NFT for a vehicle (independent version)",
        "params": {
          "_tokenURI": "Metadata URI for the NFT",
          "inspectionId": "The vehicle inspection ID",
          "make": "Vehicle make (optional, for on-chain storage)",
          "model": "Vehicle model (optional, for on-chain storage)",
          "registrationNumber": "Registration number (optional, for on-chain storage)",
          "to": "Address to mint NFT to",
          "vehicleType": "Vehicle type (optional, for on-chain storage)",
          "year": "Vehicle year (optional, for on-chain storage)"
        }
      },
      "name()": {
        "details": "Returns the token collection name."
      },
      "nftExistsForInspection(string)": {
        "details": "Check if NFT exists for inspection ID"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
      },
      "supportsInterface(bytes4)": {
        "details": "Override required by Solidity for multiple inheritance"
      },
      "symbol()": {
        "details": "Returns the token collection symbol."
      },
      "tokenURI(uint256)": {
        "details": "Override required by Solidity for multiple inheritance"
      },
      "totalSupply()": {
        "details": "Get total number of minted NFTs"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}